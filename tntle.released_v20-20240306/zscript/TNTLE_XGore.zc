/*
 * Copyright (c) 2005-2016 Nash Muhandes, Ozymandias81
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

//DOOM INHERITANCES

//Monsters Gibs
Class Gore_DemonArm : Blood //sprites by NeoWorm
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 8;
		Mass 20;
		BounceType "Classic";
		BounceCount 3;
		BounceFactor 0.8;
		+CORPSE
		+DROPOFF
		+MISSILE
		+MOVEWITHSECTOR
		+NOTELEPORT
		+SKYEXPLODE //prevent it to appear on sky - ozy81
	}
	
	States
	{
	Spawn:
		SAAG AA 0 A_JumpIf(waterlevel > 0, "Underwater");
		SAAG ABCDEFGH 2;
		Loop;
	Underwater:
		SAAG ABCDEFGH 2;
		SAAG I -1;
		Stop;
	Death:
		SAAG I -1;
		Stop;
	Death.Sky: //prevent it to appear on sky - ozy81
		SAAG A 1;
		Stop;
	Crash:
		SAAG I -1;
		Stop;
	}
}

Class Gore_SpectreArm : Gore_DemonArm
{
	Default
	{
		RenderStyle "STYLE_OptFuzzy";
		Alpha 0.5;
		+SHADOW
	}
	
	States
	{
	Spawn:
		SAAG AA 0 A_JumpIf(waterlevel > 0, "Underwater");
		SAAG ABCDEFGH 2;
		Loop;
	Underwater:
		SAAG ABCDEFGH 2;
		SAAG I -1;
		Stop;
	}
}

Class NashGore_ZombieMan : ZombieMan replaces ZombieMan
{
	Default
	{
		//$Sprite POSSA1
	}
	
	States
	{
	Death:
		PSS2 A 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		PSS2 A 8;
		PSS2 B 8 A_Scream();
		PSS2 C 8 A_NoBlocking();
		PSS2 D 8;
		PSS2 E -1;
		Stop;
	XDeath:
		POSS M 5;
		POSS N 5 A_XScream();
		POSS O 5 A_NoBlocking();
		POSS PQRST 5;
		POSS U -1;
		Stop;
	}
}

Class NashGore_ShotgunGuy : ShotgunGuy replaces ShotgunGuy
{
	Default
	{
		//$Sprite SPOSA1
	}
	
	States
	{
	Death:
		PS22 A 0 A_Jump(128,"Death2","Death3");
		Goto Super::Death;
	Death2:
		PS22 A 8;
		PS22 B 8 A_Scream();
		PS22 C 8 A_NoBlocking();
		PS22 D 8;
		PS22 E -1;
		Stop;
	Death3:
		PS22 F 5;
		PS22 G 5 A_Scream();
		PS22 HI 5;
		PS22 J 5 A_NoBlocking();
		PS22 K 5;
		PS22 L 10;
		PS22 M -1;
		Stop;
	XDeath:
		SPOS M 5;
		SPOS N 5 A_XScream();
		SPOS O 5 A_NoBlocking();
		SPOS PQRST 5;
		SPOS U -1;
		Stop;
	}
}

Class NashGore_DoomImp : DoomImp replaces DoomImp
{
	Default
	{
		//$Sprite TROOA1
		GibHealth 35;
	}
	
	States
	{
	Death:
		TROO A 0 A_Jump(128,"Death2","Death3","Death4");
		Goto Super::Death;
	Death2:
		TROO V 8;
		TROO W 8 A_Scream();
		TROO X 5;
		TROO Y 5 A_Fall();
		TROO Z -1;
		Stop;
	Death3:
		TRO2 A 6;
		TRO2 B 6 A_Scream();
		TRO2 CD 5;
		TRO2 E 5 A_Fall();
		TRO2 F -1;
		Stop;
	Death4:
		TRO2 G 8;
		TRO2 H 8 A_Scream();
		TRO2 IJ 8;
		TRO2 K 5 A_Fall();
		TRO2 L 10;
		TRO2 M -1;
		Stop;
	XDeath:
		TROO N 5;
		TROO O 5 A_XScream();
		TROO P 5;
		TROO Q 5 A_NoBlocking();
		TROO RST 5;
		TROO U -1;
		Stop;
	}
}

Class NashGore_Demon : Demon replaces Demon
{
	Default
	{
		//$Sprite SARGA1
		GibHealth 35;
	}
	
	States
	{
	Death:
		SARG A 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		SAAR A 8;
		SAAR B 0 A_FaceTarget();
		SAAR B 0 A_SpawnItemEx("Gore_DemonArm",10,0,32,0,random(2,8),0,0,random(0,180));
		SAAR B 8 A_Scream();
		SAAR C 4;
		SAAR D 4 A_NoBlocking();
		SAAR E 4;
		SAAR F -1;
		Stop;
	XDeath:
		SARG I 0 A_Jump(128,"XDeath2");
		SARG I 0 A_SpawnItemEx("Gore_DemonArm",10,0,32,0,random(2,8),0,0,random(0,180));
		SARG I 8;
		SARG J 8 A_Scream();
		SARG K 4;
		SARG L 4 A_NoBlocking();
		SARG M 4;
		SARG N -1;
		Stop;
	XDeath2:
		SARG O 5;
		SARG P 5 A_XScream();
		SARG Q 5 A_NoBlocking();
		SARG RSTUV 5;
		SARG W -1;
		Stop;
	}
}

Class NashGore_Spectre : Spectre replaces Spectre
{
	Default
	{
		//$Sprite SARGA1
		GibHealth 35;
		BloodColor "Black";
		RenderStyle "STYLE_OptFuzzy";
	}
	
	States
	{
	Death:
		SARG A 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		SAAR A 8;
		SAAR B 0 A_FaceTarget();
		SAAR B 0 A_SpawnItemEx("Gore_SpectreArm",10,0,32,0,random(2,8),0,0,random(0,180));
		SAAR B 8 A_Scream();
		SAAR C 4;
		SAAR D 4 A_NoBlocking();
		SAAR E 4;
		SAAR F -1;
		Stop;
	XDeath:
		SARG I 0 A_Jump(128,"XDeath2");
		SARG I 0 A_SpawnItemEx("Gore_SpectreArm",10,0,32,0,random(2,8),0,0,random(0,180));
		SARG I 8;
		SARG J 8 A_Scream();
		SARG K 4;
		SARG L 4 A_NoBlocking();
		SARG M 4;
		SARG N -1;
		Stop;
	XDeath2:
		SARG O 5;
		SARG P 5 A_XScream();
		SARG Q 5 A_NoBlocking();
		SARG RSTUV 5;
		SARG W -1;
		Stop;
	}
}

Class NashGore_HellKnight : HellKnight replaces HellKnight
{
	Default
	{
		//$Sprite BOS2A1C1
		GibHealth 35;
		BloodColor "0 a3 0";
	}
	
	States
	{
	Death:
		BOS2 A 0 A_Jump(128,"Death2","Death3","Death4");
		Goto Super::Death;
	Death2:
		BS22 A 6;
		BS22 B 6 A_Scream();
		BS22 C 6 A_Fall();
		BS22 DEF 6;
		BS22 G -1;
		Stop;
	Death3:
		BOS2 H 5;
		BOS2 I 5 A_Scream();
		BOS2 J 5 A_Fall();
		BOS2 K 6;
		BOS2 LM 8;
		BOS2 N -1;
		Stop;
	XDeath:
		BOS2 I 0 A_Jump(128,"XDeath2");
		BOS2 I 8;
		BOS2 J 8 A_Scream();
		BOS2 K 8;
		BOS2 L 8 A_NoBlocking();
		BOS2 MN 8;
		BOS2 O -1;
		Stop;
	XDeath2:
		BOS2 P 5;
		BOS2 Q 5 A_XScream();
		BOS2 R 5 A_NoBlocking();
		BOS2 STUVW 5;
		BOS2 X -1;
		Stop;
	}
}

Class NashGore_BaronOfHell : BaronOfHell replaces BaronOfHell
{
	Default
	{
		//$Sprite BOSSA1
		GibHealth 35;
		BloodColor "0 a3 0";
	}
	
	States
	{
	Death:
		BOSS A 0 A_Jump(128,"Death2","Death3","Death4");
		Goto Super::Death;
	Death2:
		BS12 A 6;
		BS12 B 6 A_Scream();
		BS12 C 6 A_Fall();
		BS12 DEF 6;
		BS12 G -1;
		Stop;
	Death3:
		BS12 H 5;
		BS12 I 5 A_Scream();
		BS12 J 5 A_Fall();
		BS12 K 6;
		BS12 LM 8;
		BS12 N -1;
		Stop;
	XDeath:
		BOSS I 0 A_Jump(128,"XDeath2");
		BOSS I 8;
		BOSS J 8 A_Scream();
		BOSS K 8;
		BOSS L 8 A_NoBlocking();
		BOSS MN 8;
		BOSS O -1 A_BossDeath();
		Stop;
	XDeath2:
		BOSS P 5;
		BOSS Q 5 A_XScream();
		BOSS R 5 A_NoBlocking();
		BOSS STUVW 5;
		BOSS X -1;
		Stop;
	}
}

Class NashGore_Arachnotron : Arachnotron replaces Arachnotron
{
	Default
	{
		//$Sprite BSPIA1D1
		GibHealth 35;
	}
	
	States
	{
	Death:
		BSPI Q 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		BSPI Q 10 A_StartSound("Arachnotron/Death2", CHAN_BODY, CHANF_DEFAULT);
		BSPI R 8 A_NoBlocking();
		BSPI S 6;
		BSPI TU 6 Bright;
		BSPI V 5 Bright;
		BSPI WX 4 Bright;
		BSPI Y -1 A_BossDeath();
		Stop;
	XDeath:
		BSPI J 20 A_Scream();
		BSPI K 7 A_NoBlocking();
		BSPI LMNO 7;
		BSPI P -1 A_BossDeath();
		Stop;
	}
}

Class NashGore_Fatso : Fatso replaces Fatso
{
	Default
	{
		//$Sprite FATTA1
		GibHealth 35;
	}
	
	States
	{
	Death:
		FATT A 0 A_Jump(128,"Death2","Death3");
		Goto Super::Death;
	Death2:
		FAT2 A 7;
		FAT2 B 7 A_Scream();
		FAT2 C 7 A_NoBlocking();
		FAT2 DEFGHI 5;
		FAT2 J -1 A_BossDeath();
		Stop;
	Death3:
		FAT2 K 10;
		FAT2 L 6 A_Scream();
		FAT2 M 6 A_NoBlocking();
		FAT2 NOP 6;
		FAT2 Q 8;
		FAT2 R -1 A_BossDeath();
		Stop;
	}
}

Class NashGore_ChaingunGuy : ChaingunGuy replaces ChaingunGuy
{
	States
	{
	XDeath:
		CPOS O 5;
		CPOS P 5 A_XScream();
		CPOS Q 5 A_NoBlocking();
		CPOS RS 5;
		CPOS T -1;
		Stop;
	}
}

Class NashGore_Cacodemon : Cacodemon replaces Cacodemon
{
	Default
	{
		GibHealth 35;
		BloodColor "0 B7 F5";
	}
	
	States
	{
	XDeath:
		HEAD G 8;
		HEAD H 8 A_Scream();
		HEAD I 8;
		HEAD J 8;
		HEAD K 8 A_NoBlocking();
		HEAD L -1 A_SetFloorClip();
		Stop;
	}
}

Class NashGore_Archvile : Archvile replaces Archvile
{
	Default
	{
		GibHealth 35;
	}
	
	States
	{
	XDeath:
		VILE Q 7;
		VILE R 7 A_Scream();
		VILE S 7 A_NoBlocking();
		VILE TUVWXY 7;
		VILE Z -1;
		Stop;
	}
}

Class NashGore_LostSoul : LostSoul replaces LostSoul
{
	Default
	{
		+NOBLOOD
		+NOBLOODDECALS
	}
}

Class NashGore_SpiderMasterMind : SpiderMasterMind replaces SpiderMasterMind
{
	Default
	{
		BloodColor "0 a3 0";
	}
}

Class NashGore_PainElemental : PainElemental replaces PainElemental
{
	Default
	{
		BloodColor "chocolate4";
	}
}

//Stealth monsters
Class NashGore_StealthArachnotron : StealthArachnotron replaces StealthArachnotron
{
	Default
	{
		//$Sprite BSPIA1D1
		GibHealth 35;
	}
	
	States
	{
	Death:
		BSPI J 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		BSPI Q 10 A_StartSound("Arachnotron/Death2", CHAN_BODY, CHANF_DEFAULT);
		BSPI R 8 A_NoBlocking();
		BSPI S 6;
		BSPI TU 6 Bright;
		BSPI V 5 Bright;
		BSPI WX 4 Bright;
		BSPI Y -1 A_BossDeath();
		Stop;
	XDeath:
		BSPI J 20 A_Scream();
		BSPI K 7 A_NoBlocking();
		BSPI LMNO 7;
		BSPI P -1 A_BossDeath();
		Stop;
	}
}

Class NashGore_StealthArchvile : StealthArchvile replaces StealthArchvile
{
	Default
	{
		GibHealth 35;
	}
	
	States
	{
	XDeath:
		VILE Q 7;
		VILE R 7 A_Scream();
		VILE S 7 A_NoBlocking();
		VILE TUVWXY 7;
		VILE Z -1;
		Stop;
	}
}

Class NashGore_StealthBaron : StealthBaron replaces StealthBaron
{
	Default
	{
		//$Sprite BOSSA1
		GibHealth 35;
		BloodColor "0 a3 0";
	}
	
	States
	{
	Death:
		BOSS A 0 A_Jump(128,"Death2","Death3","Death4");
		Goto Super::Death;
	Death2:
		BS12 A 6;
		BS12 B 6 A_Scream();
		BS12 C 6 A_Fall();
		BS12 DEF 6;
		BS12 G -1;
		Stop;
	Death3:
		BS12 H 5;
		BS12 I 5 A_Scream();
		BS12 J 5 A_Fall();
		BS12 K 6;
		BS12 LM 8;
		BS12 N -1;
		Stop;
	XDeath:
		BOSS I 0 A_Jump(128,"XDeath2");
		BOSS I 8;
		BOSS J 8 A_Scream();
		BOSS K 8;
		BOSS L 8 A_NoBlocking();
		BOSS MN 8;
		BOSS O -1 A_BossDeath();
		Stop;
	XDeath2:
		BOSS P 5;
		BOSS Q 5 A_XScream();
		BOSS R 5 A_NoBlocking();
		BOSS STUVW 5;
		BOSS X -1;
		Stop;
	}
}

Class NashGore_StealthDemon : StealthDemon replaces StealthDemon
{
	Default
	{
		//$Sprite SARGA1
		GibHealth 35;
	}
	
	States
	{
	Death:
		SARG A 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		SAAR A 8;
		SAAR B 0 A_FaceTarget();
		SAAR B 0 A_SpawnItemEx("Gore_DemonArm",10,0,32,0,random(2,8),0,0,random(0,180));
		SAAR B 8 A_Scream();
		SAAR C 4;
		SAAR D 4 A_NoBlocking();
		SAAR E 4;
		SAAR F -1;
		Stop;
	XDeath:
		SARG I 0 A_Jump(128,"XDeath2");
		SARG I 0 A_SpawnItemEx("Gore_DemonArm",10,0,32,0,random(2,8),0,0,random(0,180));
		SARG I 8;
		SARG J 8 A_Scream();
		SARG K 4;
		SARG L 4 A_NoBlocking();
		SARG M 4;
		SARG N -1;
		Stop;
	XDeath2:
		SARG O 5;
		SARG P 5 A_XScream();
		SARG Q 5 A_NoBlocking();
		SARG RSTUV 5;
		SARG W -1;
		Stop;
	}
}

Class NashGore_StealthDoomImp : StealthDoomImp replaces StealthDoomImp
{
	Default
	{
		//$Sprite TROOA1
		GibHealth 35;
	}
	
	States
	{
	Death:
		TROO A 0 A_Jump(128,"Death2","Death3","Death4");
		Goto Super::Death;
	Death2:
		TROO V 8;
		TROO W 8 A_Scream();
		TROO X 5;
		TROO Y 5 A_Fall();
		TROO Z -1;
		Stop;
	Death3:
		TRO2 A 6;
		TRO2 B 6 A_Scream();
		TRO2 CD 5;
		TRO2 E 5 A_Fall();
		TRO2 F -1;
		Stop;
	Death4:
		TRO2 G 8;
		TRO2 H 8 A_Scream();
		TRO2 IJ 8;
		TRO2 K 5 A_Fall();
		TRO2 L 10;
		TRO2 M -1;
		Stop;
	XDeath:
		TROO N 5;
		TROO O 5 A_XScream();
		TROO P 5;
		TROO Q 5 A_NoBlocking();
		TROO RST 5;
		TROO U -1;
		Stop;
	}
}

Class NashGore_StealthHellKnight : StealthHellKnight replaces StealthHellKnight
{
	Default
	{
		//$Sprite BOS2A1C1
		GibHealth 35;
		BloodColor "0 a3 0";
	}
	
	States
	{
	Death:
		BOS2 A 0 A_Jump(128,"Death2","Death3","Death4");
		Goto Super::Death;
	Death2:
		BS22 A 6;
		BS22 B 6 A_Scream();
		BS22 C 6 A_Fall();
		BS22 DEF 6;
		BS22 G -1;
		Stop;
	Death3:
		BOS2 H 5;
		BOS2 I 5 A_Scream();
		BOS2 J 5 A_Fall();
		BOS2 K 6;
		BOS2 LM 8;
		BOS2 N -1;
		Stop;
	XDeath:
		BOS2 I 0 A_Jump(128,"XDeath2");
		BOS2 I 8;
		BOS2 J 8 A_Scream();
		BOS2 K 8;
		BOS2 L 8 A_NoBlocking();
		BOS2 MN 8;
		BOS2 O -1;
		Stop;
	XDeath2:
		BOS2 P 5;
		BOS2 Q 5 A_XScream();
		BOS2 R 5 A_NoBlocking();
		BOS2 STUVW 5;
		BOS2 X -1;
		Stop;
	}
}

Class NashGore_StealthShotgunGuy : StealthShotgunGuy replaces StealthShotgunGuy
{
	Default
	{
		//$Sprite SPOSA1
	}
	
	States
	{
	Death:
		PS22 A 0 A_Jump(128,"Death2","Death3");
		Goto Super::Death;
	Death2:
		PS22 A 8;
		PS22 B 8 A_Scream();
		PS22 C 8 A_NoBlocking();
		PS22 D 8;
		PS22 E -1;
		Stop;
	Death3:
		PS22 F 5;
		PS22 G 5 A_Scream();
		PS22 HI 5;
		PS22 J 5 A_NoBlocking();
		PS22 K 5;
		PS22 L 10;
		PS22 M -1;
		Stop;
	XDeath:
		SPOS M 5;
		SPOS N 5 A_XScream();
		SPOS O 5 A_NoBlocking();
		SPOS PQRST 5;
		SPOS U -1;
		Stop;
	}
}

Class NashGore_StealthZombieMan : StealthZombieMan replaces StealthZombieMan
{
	Default
	{
		//$Sprite POSSA1
	}
	
	States
	{
	Death:
		PSS2 A 0 A_Jump(128,"Death2");
		Goto Super::Death;
	Death2:
		PSS2 A 8;
		PSS2 B 8 A_Scream();
		PSS2 C 8 A_NoBlocking();
		PSS2 D 8;
		PSS2 E -1;
		Stop;
	XDeath:
		POSS M 5;
		POSS N 5 A_XScream();
		POSS O 5 A_NoBlocking();
		POSS PQRST 5;
		POSS U -1;
		Stop;
	}
}

Class NashGore_StealthFatso : StealthFatso replaces StealthFatso
{
	Default
	{
		//$Sprite FATTA1
		GibHealth 35;
	}
	
	States
	{
	Death:
		FATT A 0 A_Jump(128,"Death2","Death3");
		Goto Super::Death;
	Death2:
		FAT2 A 7;
		FAT2 B 7 A_Scream();
		FAT2 C 7 A_NoBlocking();
		FAT2 DEFGHI 5;
		FAT2 J -1 A_BossDeath();
		Stop;
	Death3:
		FAT2 K 10;
		FAT2 L 6 A_Scream();
		FAT2 M 6 A_NoBlocking();
		FAT2 NOP 6;
		FAT2 Q 8;
		FAT2 R -1 A_BossDeath();
		Stop;
	}
}

Class NashGore_StealthCacodemon : StealthCacodemon replaces StealthCacodemon
{
	Default
	{
		GibHealth 35;
		BloodColor "18 2 f0";
	}
	
	States
	{
	XDeath:
		HEAD G 8;
		HEAD H 8 A_Scream();
		HEAD I 8;
		HEAD J 8;
		HEAD K 8 A_NoBlocking();
		HEAD L -1 A_SetFloorClip();
		Stop;
	}
}

Class NashGore_StealthChaingunGuy : StealthChaingunGuy replaces StealthChaingunGuy
{
	Default
	{
		GibHealth 35;
	}
	
	States
	{
	XDeath:
		CPOS O 5;
		CPOS P 5 A_XScream();
		CPOS Q 5 A_NoBlocking();
		CPOS RS 5;
		CPOS T -1;
		Stop;
	}
}