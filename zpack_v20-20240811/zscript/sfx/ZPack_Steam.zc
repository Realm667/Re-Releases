Class SteamSpawner : SwitchableDecoration //no significant changes or improvements have been put here, just a dec to zs conversion - ozy81
{
	Default
	{
		//$Category ZPack Effects
		//$Color 13
		//$Sprite STEMA0
		//$Arg0 "Direction"
		//$Arg0Tooltip "0 is up, 1 is down, 2 is forward (downfacing spawners should be placed 4 map units below the ceiling)"
		//$Arg0Type 11
		//$Arg0Enum { 0 = "Up"; 1 = "Down"; 2 = "Forward"; }
		//$Arg1 "Type"
		//$Arg1Tooltip "Second argument chooses if it's a constant spawner, or spawns in bursts. Burst spawners use the third argument and play a different sound."
		//$Arg1Type 11
		//$Arg1Enum { 0 = "Constant"; 1 = "Bursts"; }
		//$Arg2 "Frequency"
		//$Arg2Tooltip "Third argument controls the frequency of the bursts (divided by 16. I.e, 128 will end up as 8). This is only used by the second argument."
		//$Arg3 "Sound"
		//$Arg3Type 11
		//$Arg3Enum { 0 = "Yes"; 1 = "No"; }
		Height 2;
		Radius 1;
		Mass 0;
		+CLIENTSIDEONLY
		+NOBLOCKMAP
		+NOGRAVITY
		+NOINTERACTION
	}

	States
	{
	Spawn:
	Active:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(Args[0] == 1, "Down");
		TNT1 A 0 A_JumpIf(Args[0] > 1, "Forward");
		TNT1 A 0 A_JumpIf(Args[1] > 0, "UpBurst");
		TNT1 A 0 A_JumpIf(Args[3] > 0, 2);
		TNT1 A 0 A_StartSound("Steam/Loop", CHAN_7, CHANF_LOOP);
		TNT1 A 1 A_SpawnItemEx("SteamParticle", 0, 0, 1, (0.1)*Random(0, 4), 0, (0.1)*Random(35, 40), Random(0, 360), 128);
		Loop;
	Down:
		TNT1 A 0 A_JumpIf(Args[1] > 0, "DownBurst");
		TNT1 A 0 A_JumpIf(Args[3] > 0, 2);
		TNT1 A 0 A_StartSound("Steam/Loop", CHAN_7, CHANF_LOOP);
		TNT1 A 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(0, 4), 0, (-0.1)*Random(35, 40), Random(0, 360), 128);
		Loop;
	Forward:
		TNT1 A 0 A_JumpIf(Args[1] > 0, "ForwardBurst");
		TNT1 A 0 A_JumpIf(Args[3] > 0, 2);
		TNT1 A 0 A_StartSound("Steam/Loop", CHAN_7, CHANF_DEFAULT);
		TNT1 A 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(35, 40), 0, (0.1)*Random(-5, 5), Random(-8, 8), 128);
		Loop;
	UpBurst:
		TNT1 A 1 A_Jump(Args[2]/16, 1);
		Loop;
		TNT1 A 0 A_JumpIf(Args[3] > 0, 2);
		TNT1 A 0 A_StartSound("Steam/Fire", CHAN_7, CHANF_DEFAULT);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 1, (0.1)*Random(0, 4), 0, (0.1)*Random(35, 40), Random(0, 360), 128);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 1, (0.1)*Random(0, 4), 0, (0.1)*Random(35, 40), Random(0, 360), 128);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 1, (0.1)*Random(0, 4), 0, (0.1)*Random(35, 40), Random(0, 360), 128);
		Loop;
	DownBurst:
		TNT1 A 1 A_Jump(Args[2]/16, 1);
		Loop;
		TNT1 A 0 A_JumpIf(Args[3] > 0, 2);
		TNT1 A 0 A_StartSound("Steam/Fire", CHAN_7, CHANF_DEFAULT);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(0, 4), 0, (-0.1)*Random(35, 40), Random(0, 360), 128);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(0, 4), 0, (-0.1)*Random(35, 40), Random(0, 360), 128);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(0, 4), 0, (-0.1)*Random(35, 40), Random(0, 360), 128);
		Loop;
	ForwardBurst:
		TNT1 A 1 A_Jump(Args[2]/16, 1);
		Loop;
		TNT1 A 0 A_JumpIf(Args[3] > 0, 2);
		TNT1 A 0 A_StartSound("Steam/Fire", CHAN_7, CHANF_DEFAULT);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(35, 40), 0, (0.1)*Random(-5, 5), Random(-8, 8), 128);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(35, 40), 0, (0.1)*Random(-5, 5), Random(-8, 8), 128);
		TNT1 AAAAAAAAAA 1 A_SpawnItemEx("SteamParticle", 0, 0, 0, (0.1)*Random(35, 40), 0, (0.1)*Random(-5, 5), Random(-8, 8), 128);
		Loop;
	Inactive:
		TNT1 A 1 A_StopSound(CHAN_7);
		TNT1 A 1;
		Goto Inactive+1;
	}
}

Class SteamParticle : ParticleBase //only this actor got some sort of optimization with this inheritance - ozy81
{
	Default
	{
		DistanceCheck "ZPAK_Lod";
		Height 1;
		Radius 1;
		RenderStyle "STYLE_Add";
		Scale 0.4;
		Alpha 0.65;
		+MISSILE
		+NOBLOCKMAP
		+NOGRAVITY
	}

	States
	{
	Spawn:
		STEM A 2 A_SetTranslucent(0.6, 1);
		STEM B 2 A_SetTranslucent(0.55, 1);
		STEM C 2 A_SetTranslucent(0.5, 1);
		STEM D 2 A_SetTranslucent(0.45, 1);
		STEM E 2 A_SetTranslucent(0.4, 1);
		STEM F 2 A_SetTranslucent(0.35, 1);
		STEM G 2 A_SetTranslucent(0.3, 1);
		STEM H 2 A_SetTranslucent(0.25, 1);
		STEM I 2 A_SetTranslucent(0.2, 1);
		STEM J 2 A_SetTranslucent(0.15, 1);
		STEM K 2 A_SetTranslucent(0.1, 1);
		STEM L 2 A_SetTranslucent(0.05, 1);
		Stop;
	}
}