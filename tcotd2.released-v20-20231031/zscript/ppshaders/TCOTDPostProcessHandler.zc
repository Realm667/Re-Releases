/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDPostProcessHandler
//
//===========================================================================

class TCOTDPostProcessHandler : StaticEventHandler
{
	ui PlayerInfo plr;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void RenderOverlay(RenderEvent e)
	{
		if (!plr)
			plr = players[consoleplayer];

		if (plr)
		{
			UnderwaterWarp(e);
			HeatHaze(e);
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	ui void UnderwaterWarp(RenderEvent e)
	{
		if ((!multiplayer && Menu.GetCurrentMenu()) || paused || TCOTDGameplayStatics.IsConsoleVisible())
			return;

		let cam = plr.camera;

		bool enabled =
		(
			CVar.GetCVar("tcotd2_underwaterwarp", plr).GetBool() &&
			cam.WaterLevel >= 3
		);

		PPShader.SetEnabled("underwaterwarpshader", enabled);

		// set the player's timer up correctly (more-than-1-tick precision)
		PPShader.SetUniform1f("underwaterwarpshader", "timer", gametic + e.FracTic);
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	ui void HeatHaze(RenderEvent e)
	{
		let cam = plr.camera;
		PPShader.SetEnabled("heatshader", CVar.GetCVar("tcotd2_heathaze", plr).GetBool());
		PPShader.SetUniform1f("heatshader", "timer", gametic + e.FracTic);
		PPShader.SetUniform1f("heatshader", "amount", double(cam.CountInv("TCOTDHeatHazeAmount")));
	}
}
