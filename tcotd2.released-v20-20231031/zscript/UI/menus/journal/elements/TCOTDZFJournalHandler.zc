/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDZFJournalHandler
//
//===========================================================================

class TCOTDZFJournalHandler : TCOTDZFHandler
{
	TCOTDJournalMenu menu;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void ButtonClickCommand(TCOTDZFButton caller, String command)
	{
		if (!menu)
			return;

		//Console.Printf(command);

		// Parse scrolling button commands
		if (command ~== "TCOTDZFHandlerCommandScrollUpObjectives")
		{
			menu.mCurrentlyFocused = menu.objectivesFrame;
			menu.ScrollUp();
		}
		else if (command ~== "TCOTDZFHandlerCommandScrollDownObjectives")
		{
			menu.mCurrentlyFocused = menu.objectivesFrame;
			menu.ScrollDown();
		}
		else if (command ~== "TCOTDZFHandlerCommandScrollUpNotes")
		{
			menu.mCurrentlyFocused = menu.notesFrame;
			menu.ScrollUp();
		}
		else if (command ~== "TCOTDZFHandlerCommandScrollDownNotes")
		{
			menu.mCurrentlyFocused = menu.notesFrame;
			menu.ScrollDown();
		}

		// Parse the command
		Array<String> strings;
		strings.Clear();
		command.Split(strings, ":");

		// Return if the array has less than 2 strings
		if (strings.Size() < 2)
			return;

		// Play activate sound
		Menu.MenuSound("journal/click");

		if ((strings[0] ~== "TCOTDZFHandlerCommandTCOTDNote"))
		{
			int pnum = players[consoleplayer].mo.PlayerNumber();
			EventHandler.SendInterfaceEvent(pnum, "EV_SetNoteToRead:" ..  strings[1]);
		}
	}

	override void ElementHoverChanged(TCOTDZFElement caller, string command, bool unhovered)
	{
		if (!unhovered && !caller.disabled)
		{
			Menu.MenuSound("journal/hover");
		}
		Super.ElementHoverChanged(caller, command, unhovered);
	}
}
