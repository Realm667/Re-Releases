/*
 * Copyright (c) 2007-2024 BlueShadow, Ozymandias81, Tormentor667, Xaser
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

Class PistolCasing : Actor
{
	Default
	{
		Height 8;
		Radius 6;
		Speed 4;
		Scale 0.45;
		BounceType "Doom";
		BounceFactor 0.4;
		Mass 200; // [Blue Shadow] increasing the mass makes it sink faster in a 'swimmable water'
		//SeeSound "weapons/case1";
		BounceSound "weapons/case1";
		PROJECTILE;
		-NOGRAVITY
		-NOBLOCKMAP
	}

	States
	{
	Spawn:
		CAS2 ABCD 2 A_JumpIf(waterlevel > 0, "Underwater");
		Loop;
	Underwater:
		CAS2 ABCD 2 A_ScaleVelocity(0.925); // [Blue Shadow] makes the it de-accelerate :)
		Loop;
	Death:
		CAS2 A 0 A_Jump(255,"DeathA", "DeathB", "DeathC", "DeathD");
		DeathA:
		CAS2 A 350;
		CAS2 AAAAAAAAAA 1 A_FadeOut(0.1);
		Stop;
		DeathB:
		CAS2 B 350;
		CAS2 BBBBBBBBBB 1 A_FadeOut(0.1);
		Stop;
		DeathC:
		CAS2 C 350;
		CAS2 CCCCCCCCCC 1 A_FadeOut(0.1);
		Stop;
		DeathD:
		CAS2 D 350;
		CAS2 DDDDDDDDDD 1 A_FadeOut(0.1);
		Stop;
	}
}

Class PisCaseSpawn : Actor
{
	Default
	{
		Speed 20;
		PROJECTILE;
		+NOCLIP
	}

	States
	{
	Spawn:
		TNT1 AA 1 A_SpawnItemEx("PistolCasing", 0, 0, 0, 4, 0, Random(2, 4), Random(85, 95), SXF_CLIENTSIDE);
		Stop;
	}
}

Class BRCaseSpawn : Actor
{
	Default
	{
		Speed 20;
		PROJECTILE;
		+NOCLIP
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PistolCasing", 0, 0, 0, 4, 0, Random(2, 4), Random(275, 265), SXF_CLIENTSIDE);
		Stop;
	}
}

Class ShotgunCasing : PistolCasing
{
	Default
	{
		Height 12;
		Radius 9;
		Scale 0.7;
		BounceSound "weapons/shell";
		//SeeSound "weapons/shell";
	}

	States
	{
	Spawn:
		D3S1 ACBHEGFD 1 A_JumpIf(waterlevel > 0, "Underwater");
		Loop;
	Underwater:
		D3S1 ACBHEGFD 1 A_ScaleVelocity(0.925);
		Loop;
	Death:
		D3S1 A 0 A_Jump(255,"DeathA", "DeathB", "DeathC", "DeathD", "Death", "DeathF", "DeathG", "DeathH");
        DeathA:
		D3S1 A 350;
		D3S1 AAAAAAAAAA 1 A_FadeOut(0.1);
		Stop;
		DeathB:
		D3S1 B 350;
		D3S1 BBBBBBBBBB 1 A_FadeOut(0.1);
		Stop;
		DeathC:
		D3S1 C 350;
		D3S1 CCCCCCCCCC 1 A_FadeOut(0.1);
		Stop;
		DeathD:
		D3S1 D 350;
		D3S1 DDDDDDDDDD 1 A_FadeOut(0.1);
		Stop;
		DeathE:
		D3S1 E 350;
		D3S1 EEEEEEEEEE 1 A_FadeOut(0.1);
		Stop;
		DeathF:
		D3S1 F 350;
		D3S1 FFFFFFFFFF 1 A_FadeOut(0.1);
		Stop;
		DeathG:
		D3S1 G 350;
		D3S1 GGGGGGGGGG 1 A_FadeOut(0.1);
		Stop;
		DeathH:
		D3S1 H 350;
		D3S1 HHHHHHHHHH 1 A_FadeOut(0.1);
		Stop;
	}
}

Class ShotCaseSpawn : PisCaseSpawn
{
	States
	{
	Spawn:
		TNT1 AA 1 A_SpawnItemEx("ShotgunCasing", 0, 0, 0, 4, 0, Random(2, 4), Random(-95, -85), SXF_CLIENTSIDE);
		Stop;
	}
}

Class SShotCaseSpawn : ShotCaseSpawn
{
	Default
	{
		Speed 66;
	}

	States
	{
	Spawn:
		TNT1 AA 1 A_SpawnItemEx("ShotgunCasing", 0, 0, 0, 4, 0, Random(2, 4), Random(-95, -85), SXF_CLIENTSIDE);
		Stop;
	}
}