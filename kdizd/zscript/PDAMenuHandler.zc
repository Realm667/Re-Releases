// Copyright 2019 - 2020 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// PDAMenuHandler
// Handles PDA button clicks
//
//===========================================================================

class PDAMenuHandler : PDAHandler
{
    PDAMenu menu;

    override void ButtonClickCommand(PDAButton caller, String command)
    {
		if (!menu) return;
		if (!menu.pdaContentText || !menu.pdaContentBackground) return;

		// Parse the command
		Array<String> strings;
		strings.Clear();
		command.Split(strings, ":");

		// Return if the array has less than 2 strings
		if (strings.Size() < 2) return;

		if ((strings[0] ~== "ActivatePDA"))
		{
			class<PDA> cls = strings[1];
			String txt = GetDefaultByType((class<PDA>)(cls)).pdaText;
			String pdaText = StringTable.Localize(txt);

			// Update content image and text
			menu.pdaContentBackground.image = GetDefaultByType((class<PDA>)(cls)).pdaImage;
			menu.pdaContentText.SetText(pdaText);

			// Play sound if available
			Sound snd = GetDefaultByType((class<PDA>)(cls)).pdaAudio;
			if (snd)
			{
				// Find the PDA reader and play the sound from it (lol hack)
				let pdaReader = menu.pmo.FindInventory("PDAReader", true);
				if (pdaReader && menu.pmo == players[consoleplayer].mo)
				{
					pdaReader.A_PlaySound(snd, CHAN_VOICE | CHAN_UI, snd_menuvolume, false, ATTN_NONE);
				}
			}
			else
			{
				// Stop all sounds when clicking on a soundless PDA
				EventHandler.SendNetworkEvent("EV_StopPDASound");
			}
		}
	}
}
