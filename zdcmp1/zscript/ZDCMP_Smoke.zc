/*
 * Copyright (c) 2016-2021 Guardsoul, Tormentor667, Ozymandias81, AFADoomer
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

// Dark Smoke
class DarkSmokeBase : ParticleBase
{
	Default
	{
		Height 2;
		Radius 1;
		+CLIENTSIDEONLY
		+DONTSPLASH
		+FORCEXYBILLBOARD
		+MISSILE
		+NOBLOCKMAP
		+NOGRAVITY
		+NOINTERACTION
		+WINDTHRUST
		Alpha 0.7;
		Scale 0.3;
	}

	States
	{
		Spawn:
			"####" A 3 A_FadeOut(0.01, FTF_REMOVE);
			Loop;
		Frames:
			DKSM A 0;
			DKS2 A 0;
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();

		int spr = GetSpriteIndex(String.Format("DKS%c", RandomPick(77, 50))); // M or 2
		if (spr != -1) { sprite = spr; }		
	}
}

class DarkSmoke1 : DarkSmokeBase
{
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();

		Thrust(1, FRandom(0, 22.5));
		vel.z = FRandom(3, 6) / 4;
	}

}

class DarkSmoke2 : DarkSmokeBase
{
	Default
	{
		Scale 0.6;
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();

		Thrust(FRandom(1, 2), FRandom(0, 22.5));
		vel.z = FRandom(5, 9) / 4;
	}
}

class DarkSmoke3 : DarkSmokeBase
{
	Default
	{
		Scale 1.0;
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();

		Thrust(FRandom(2, 4), FRandom(0, 22.5));
		vel.z = FRandom(9, 15) / 4;
	}
}

class DarkSmokeSpawner : EffectSpawner
{
	int count;

	Default
	{
		//$Category "ZDCMP1 Effects"
		//$Title Dark Smoke Spawner
		//$Color 12
		//$Arg0 "Size"
		//$Arg0Type 11
		//$Arg0Enum { 0 = "Small"; 1 = "Medium"; 2 = "Large"; }
		Height 40;
		Radius 30;
		+CLIENTSIDEONLY
		+DONTSPLASH
		+NOBLOCKMAP
		+NOCLIP
		+NOGRAVITY
		+NOINTERACTION
		EffectSpawner.Range 1200;
		EffectSpawner.SwitchVar "ZDCMP1_shaderoverlayswitch";
		+EffectSpawner.ALLOWTICKDELAY
	}

	States
	{
		Spawn:
			TNT1 A 0;
		Active:
			TNT1 A 0 A_Jump(256, 1 ,2, 3);
			TNT1 A 2 A_SpawnItemEx("DarkSmoke" .. min(3, args[0] + 1));
			TNT1 A 4 A_SpawnItemEx("DarkSmoke" .. min(3, args[0] + 1));
			TNT1 A 6 A_SpawnItemEx("DarkSmoke" .. min(3, args[0] + 1));
			Loop;
	}
}