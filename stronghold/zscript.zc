version "4.3.3"

class StrongholdEventHandler : StaticEventHandler
{
	//===========================================================================
	// HEAT SHADER EVENTHANDLERS
	//===========================================================================
	override void RenderOverlay(RenderEvent e)
	{
		PlayerInfo p = players[consoleplayer];
		ThinkerIterator shaderIter = ThinkerIterator.Create("ShaderControl");

		ShaderControl shaderControl;

		while (shaderControl = ShaderControl(shaderIter.Next()))
		{
			if (shaderControl.Owner && shaderControl.Owner == p.mo) {
				//Console.Printf("Shader: %s", shaderControl.ShaderToControl);
				if (shaderControl.amount >= 2)
				{
					Shader.SetUniform1f(p, shaderControl.ShaderToControl, "timer", gametic + e.FracTic);
					Shader.SetUniform1f(p, shaderControl.ShaderToControl, "amount", shaderControl.amount - 1);
					Shader.SetUniform1f(p, shaderControl.ShaderToControl, "alpha", shaderControl.alpha);
					shaderControl.SetUniforms(p, e);
					Shader.SetEnabled(p, shaderControl.ShaderToControl, true);
				}
				else
				{
					Shader.SetEnabled(p, shaderControl.ShaderToControl, false);
				}
			}
		}
	}

	//===========================================================================
	// INVENTORY EVENTHANDLERS
	//===========================================================================
	override void PlayerEntered(PlayerEvent e)
	{
		let me=PlayerPawn(players[e.PlayerNumber].mo);
		DropItem drop=me.GetDropItems();
		//First, remove all weapons, except those with the UNDROPPABLE flag
		for(int i=0;i<AllActorClasses.Size();i++)
		{
			let type=AllActorClasses[i];
			if(type is "Weapon")
			{
				let weptype=(class<weapon>)(type);
				let wepitem=weapon(me.FindInventory(weptype));
				if(wepitem!=null&&!wepitem.bUNDROPPABLE)
					me.A_TakeInventory(name(weptype));
			}
		}
		//If the player has any weapons in StartItem, set them here
		//They're not supposed to come with ammo, so clear that after this
		if(drop!=null)
		{
			for(DropItem di=drop;di!=null;di=di.Next)
			{
				if(di.Name=='None')
					continue;
				let weptype=(class<weapon>)(di.Name);
				if(weptype!=null)
					me.A_SetInventory(di.Name,di.Amount);
			}
		}
		//Remove all ammo, except that with the UNDROPPABLE flag
		for(int i=0;i<AllActorClasses.Size();i++)
		{
			let type=AllActorClasses[i];
			if(type is "Ammo")
			{
				let ammotype=(class<ammo>)(type);
				let ammoitem=ammo(me.FindInventory(ammotype));
				if(ammoitem!=null&&!ammoitem.bUNDROPPABLE)
					me.A_TakeInventory(name(ammotype));
			}
		}
		//If the player has any ammo in StartItem, set it here
		if(drop!=null)
		{
			for(DropItem di=drop;di!=null;di=di.Next)
			{
				if(di.Name=='None')
					continue;
				let ammotype=(class<ammo>)(di.Name);
				if(ammotype!=null)
					me.A_SetInventory(di.Name,di.Amount);
			}
		}
	}
}

#include "scripts/SthProps.zc" 	//RichardDS90/Salahmander
#include "scripts/SthTorch.zc"
#include "scripts/SthFX.zc"
#include "scripts/mblur.zc"
#include "scripts/underwater.zc"
#include "scripts/heateffect.zc"