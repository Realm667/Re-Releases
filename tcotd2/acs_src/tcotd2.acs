#library "TCOTD2"
#include "zcommon.acs"

#define MAX_VOLUME 127
#define MAX_PLAYER_HEALTH 200

/**************************************************************************************************
Generates a HUDMessageID, for use with HUDMessage
Example: MakeHUDMessage('L', 'O', 'G', 'O');
**************************************************************************************************/
function int MakeHUDMessageID(int a, int b, int c, int d)
{
	// MAKE_ID
	return (a << 24) | ( b << 16) | (c << 8) | d;
}

// fadescript for map setup
Script "MapStartFadeIn" ENTER
{
	FadeRange(0, 0, 0, 1.0, 0, 0, 0, 0.0, 1.5);
}

//lowhealth scripts - from BoA
Script "DrawLowHealth" ENTER
{
	int width = 640, height = 480;
	SetHudSize(width, height, 0);
	SetFont("M_INJ");

	// Half width and height (in fixed-point).
	int half_width  = (width / 2) << 16;
	int half_height = (height / 2) << 16;

	while (true)
	{
		int health = GetActorProperty(0, APROP_HEALTH);
		if (health > 0 && health <= 30)
		{
			HudMessage(s: "A"; HUDMSG_FADEINOUT | HUDMSG_NOTWITHFULLMAP, 0, CR_WHITE, half_width, half_height, 0.0, 0.5, 0.5);

			// Volume and delay of heartbeat (faster and louder with less health).
			int volume = MAX_VOLUME;
			int delay1 = 10;
			int delay2 = 14;

			if (health > 20)
			{
				volume = MAX_VOLUME - 50;
				delay1 = 21;
				delay2 = 34;
			}
			else if (health > 10)
			{
				volume = MAX_VOLUME - 25;
				delay1 = 18;
				delay2 = 24;
			}

			LocalAmbientSound("hbeat", volume);
			Delay(delay1);
			LocalAmbientSound("hbeat", volume);
			Delay(delay2);
		}

		Delay(1);
	}
}

Script "Madness" ENTER //ozy81, original script by AFADoomer and Talon1024
{
	int width = 512, height = 384;
	SetHudSize(width, height, 0);
	SetFont("M_MADNES");

	// Half width and height (in fixed-point).
	int half_width  = (width / 2) << 16;
	int half_height = (height / 2) << 16;

	while (true)
	{
		int nightmare = GetActorPowerupTics(0, "PowerFear");
		if (nightmare)
		{
			HudMessage(s: "A"; HUDMSG_FADEINOUT | HUDMSG_NOWRAP | HUDMSG_LAYER_OVERHUD | HUDMSG_ALPHA , 0, CR_UNTRANSLATED, half_width, half_height, 0.0, 0.5, nightmare, 0.2);
		}

		Delay(1);
	}
}

//Code necessary for CyberBog
function int degsin(int x)
{
	int result;
	if (x >= 0)
	{
		result = sin(FixedMul(x << 16, 0.0111111111) / 4);
	}
	else
	{
		result = -sin(FixedMul(-x << 16, 0.0111111111) / 4);
	}
	return result;
}

function int degcos(int x)
{
	return cos(FixedMul(x << 16, 0.0111111111) / 4);
}

function int sqrt_x3(int number)
{
	if (number <= 3)
	{
		if (number > 0)
		{
			return 1;
		}
		return 0;
	}
	int oldAns = number >> 1,
	newAns = (oldAns + number / oldAns) >> 1;
	while(newAns < oldAns)
	{
		oldAns = newAns;
		newAns = (oldAns + number / oldAns) >> 1;
	}
	return oldAns;
}

function int abs(int x)
{
	if (x < 0)
		return -x;
	return x;
}

function int sqrt_x(int x)
{
	int r;
	x = x + 1 >> 1;
	while (x > r)
		x -= r++;
	return r;
}

function int dist(int tid1, int tid2)
{
	int x, y, z, d;
	x = GetActorX(tid1) - GetActorX(tid2) >> 16;
	y = GetActorY(tid1) - GetActorY(tid2) >> 16;
	z = GetActorZ(tid1) - GetActorZ(tid2) >> 16;
	d = sqrt_x(x * x + y * y + z * z);
	return d;
}

Script "SetActivatorTarget" (int tid)
{
	int k = ActivatorTID();
	int subheight;
	int grenangle;
	int distancepro, d, i;
	SetActivatorToTarget(0);
	int distance = dist(0, k);
	subheight = (GetActorZ(0) >> 16) - (GetActorZ(k) >> 16);
	for (i= -89; i <= 89; ++i)
	{
		distancepro = sqrt_x3(distance * distance - abs((subheight >> 16) * (subheight >> 16)));
		d = ((FixedMul(distancepro << 16, FixedDiv(degsin(i), degcos(i)))) >> 16) - (((FixedMul(1.4, distancepro << 16)) >> 16) * distancepro) / ((FixedMul(4050.0, FixedMul(degcos(i), degcos(i)))) >> 16);
		if (d > subheight)
		{
			grenangle = i * 0.85;
			break;
		}
	}
	SetActivator(k);
	SetResultValue(i);
}
