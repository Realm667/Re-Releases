/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDFire
// Base class for fire effects
//
//===========================================================================

class TCOTDFire : TCOTDParticle
{
	mixin TCOTDClientSideOnlyMixin;

	bool fadedIn;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	Default
	{
		RenderStyle "Add";
		Alpha 0;
		+ROLLSPRITE
		+ROLLCENTER
		+BRIGHT
		+FORCEXYBILLBOARD
		+NOINTERACTION
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	static void SpawnEmbers(Actor self, double zOfs = 0, double defRange = 450., double xyOfsRange = 20.)
	{
		if (!self)
			return;

		if (self.CheckRange(defRange, true))
			return;

		let ember = self.Spawn("TCOTDEmber", self.Pos, NO_REPLACE);
		if (ember)
		{
			double ox, oy, oz;
			double vx, vy, vz;
			vx = frandom[rnd_SpawnEmber](-0.12, 0.12);
			vy = frandom[rnd_SpawnEmber](-0.12, 0.12);
			vz = frandom[rnd_SpawnEmber](0.5, 1.0);
			ox = frandom[rnd_SpawnEmber](-xyOfsRange, xyOfsRange);
			oy = frandom[rnd_SpawnEmber](-xyOfsRange, xyOfsRange);
			oz = frandom[rnd_SpawnEmber](5.0, 10.0);
			ember.SetOrigin(ember.Vec3Offset(ox, oy, oz + zOfs), false);
			ember.Vel = (vx, vy, vz);
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	SpawnLoop:
		"####" "#" 0
		{
			bSpriteFlip = RandomPick[rnd_FireSpawn](false, true);
			A_SetRoll(frandom[rnd_FireSpawn](0.0, 360.0));
		}
		"####" "#" 1
		{
			int rollDir = bSpriteFlip ? -1 : 1;
			double rollSpeed = 2.33 * rollDir;
			A_SetRoll(Roll + rollSpeed, SPF_INTERPOLATE);

			if (!fadedIn)
			{
				if (Alpha < 0.5)
				{
					A_FadeIn(0.1);
				}
				else
				{
					fadedIn = true;
				}
			}

			if (fadedIn)
			{
				A_SetScale(Scale.X * 0.98);
				A_FadeOut(0.025);
			}
		}
		Goto SpawnLoop + 1;
	}
}
