/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// Coop checkpoint
//
//===========================================================================

class TCOTDCoopCheckpoint : Actor
{
	bool cpActivated;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	Default
	{
		//$Category Special Actors (TCOTD2)
		//$Title Coop Checkpoint
		//$Color 11
		Radius 20;
		Height 75;
		Scale 0.8;
		+SPECIAL
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void BeginPlay(void)
	{
		Super.BeginPlay();

		if (!TCOTDGameplayStatics.IsCoop())
			Destroy();
	}

	override void Touch(Actor other)
	{
		if (cpActivated)
			return;

		let pmo = PlayerPawn(other);
		if (!pmo)
			return;

		TCOTDCampaignHandler.UpdateCheckpoint(self, pmo);
		SetState(ResolveState('CheckpointActivated'));
		cpActivated = true;
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	static void ActivateFromACS(Actor activator, int checkpointTID)
	{
		if (checkpointTID > 0)
		{
			let it = Level.CreateActorIterator(checkpointTID);
			Actor mo;
			while (mo = it.Next())
			{
				let cp = TCOTDCoopCheckpoint(mo);
				if (cp)
					cp.Touch(activator);
			}
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	Spawn:
		CKPT A -1;
		Stop;
	CheckpointActivated:
		CKPT A -1 Bright;
		Stop;
	}
}
