/*
Credits:
-Napalm sprites & sounds from Blood
-Firing sound from Hexen
-Smoke sprites by Kronos I guess?

Original code inherited from the original TCoTD 2, modified by Gothic. Added bits from lolo_is_cool R667 submissions.
*/

// ZScript rewrite by Nash Muhandes

class TCOTDWeaponNapalmLauncher : TCOTDWeapon replaces RocketLauncher
{
	Default
	{
		//$Title Napalm Launcher
		Radius 20;
		Height 16;
		Scale 0.6;
		Tag "$TAG_NAPA";
		Obituary "$OB_NAPA";
		Inventory.PickupMessage "$IP_NAPA";
		Weapon.SelectionOrder 250;
		Weapon.AmmoType "TCOTDAmmoNapalm";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 3;
		+WEAPON.EXPLOSIVE
	}

	States
	{
	Spawn:
		NPCK A -1;
		Stop;
	Ready:
		NAPL A 1 A_WeaponReady();
		Loop;
	Deselect:
		NAPL A 1 A_Lower(20);
		Loop;
	Select:
		NAPL A 1 A_Raise(20);
		Loop;
	Fire:
		NAPL A 3;
		TNT1 A 0 A_StartSound("Napalm/Shot");
		TNT1 A 0 { A_ViewKick(); A_FireProjectile("TCOTDWeaponNapalmMissile"); }
		NAPL B 2 Offset(15, 49) A_Overlay(-2, "Flash");
		NAPL B 3 Offset(21, 57);
		NAPL B 3 Offset(21, 59);
		NAPL B 3 Offset(17, 53);
		NAPL B 2 Offset(6, 42);
		NAPL A 2 Offset(2, 35);
		NAPL A 2 A_WeaponOffset(0, 32);
		NAPL A 4;
		NAPL A 1 A_Refire();
		Goto Ready;
	Flash:
		TNT1 A 0 A_OverlayFlags(-2, PSPF_ADDWEAPON, false);
		TNT1 A 0 A_OverlayOffset(-2, 0, 32);
		NPFL AB 2 Bright A_Light2();
		NPFL CD 2 Bright A_Light1();
		NPFL E 2 Bright A_Light0();
		NPFL FG 2 Bright;
		Stop;
	ViewKick:
		TNT1 A 3 A_SetViewPitch(ViewPitch - 3.3);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.4714285714285714);
		Stop;
	}
}

class TCOTDWeaponNapalmMissile : Rocket
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 20;
		Damage 80;
		Scale 0.35;
		SeeSound "Napalm/Fire";
		DeathSound "Napalm/Impact";
		Obituary "$OB_NAPR";
		Projectile;
		+RANDOMIZE
		+FORCEXYBILLBOARD
		-ROCKETTRAIL
	}

	void A_ExplosionRumble(void)
	{
		int ix, iy, iz;
		int qflags = QF_SCALEDOWN;

		Sound snd;

		ix = iy = iz = 2;
		A_QuakeEx(ix, iy, iz, 70, 0, 512, snd, flags: qflags, falloff: 128);

		ix = iy = iz = 1;
		A_QuakeEx(ix, iy, iz, 100, 0, 1024, snd, flags: qflags, falloff: 128);
	}

	States
	{
	Spawn:
		NBLL ABCDEF 2 Bright
		{
			A_SpawnItemEx("TCOTDNapalmSmokeTrail",  zvel: 1.0);
			A_SpawnItemEx("TCOTDNapalmMissileSpark", 0, 0, 0, frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](0.0, 360.0));
			A_SpawnItemEx("TCOTDNapalmMissileSpark", 0, 0, 0, frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](0.0, 360.0));
		}
		Loop;
	Death:
		NEXP A 2 Bright { A_Explode(); A_ExplosionRumble(); A_SetScale(0.9); }
		TNT1 A 0
		{
			for (int i = 0; i < 100; i++)
			{
				A_SpawnItemEx("TCOTDNapalmMissileSpark",
					frandom[rnd_NapalmSpark](-12.0, 12.0), frandom[rnd_NapalmSpark](-12.0, 12.0), frandom[rnd_NapalmSpark](24.0, 32.0),
					frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](-5.0, 5.0), frandom[rnd_NapalmSpark](-5.0, 5.0),
					frandom[rnd_NapalmSpark](0.0, 360.0));
			}
		}
		NEXP BCDEFGHIJKLMN 2 Bright;
		Stop;
	}
}

class TCOTDNapalmSmokeTrail : TCOTDParticle
{
	Default
	{
		Scale 0.2;
		RenderStyle "Translucent";
		Alpha 0.4;
		+ROLLSPRITE
		+ROLLCENTER
		+NOINTERACTION
		+FORCEXYBILLBOARD
	}

	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			bSpriteFlip = RandomPick(false, true);
		}
		NSMK ABCDEFGH 1;
	SpawnLoop:
		NSMK I 1
		{
			double r = !bSpriteFlip? -1.0 : 1.0;
			A_SetRoll(Roll + r, SPF_INTERPOLATE);
			A_FadeOut(0.01);
			A_SetScale(Scale.X * 1.05);
		}
		Loop;
	}
}

class TCOTDNapalmMissileSpark : TCOTDBulletSpark
{
	Default
	{
		Scale 0.60;
	}
}
