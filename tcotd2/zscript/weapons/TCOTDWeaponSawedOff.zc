/*
Credits:
-Shotgun sprites & reload sound from Blood
-Firing sounds from Clive Baker's Undying

Original code inherited from the original TCoTD 2, modified by Gothic. Added bits from lolo_is_cool R667 submissions.
*/

// ZScript rewrite by Nash Muhandes

class TCOTDWeaponSawedOff : TCOTDWeapon replaces Shotgun
{
	Default
	{
		//$Title Sawed-Off
		Scale 0.6;
		Tag "$TAG_SAWA";
		Obituary "$OB_SAWA";
		Inventory.PickupMessage "$IP_SAWA";
		Weapon.AmmoType1 "TCOTDAmmoShell";
		Weapon.AmmoType2 "TCOTDAmmoShell";
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 2;
		Weapon.AmmoGive 12;
		Weapon.Kickback 100;
		Weapon.SelectionOrder 130;
	}

	States
	{
	Spawn:
		SPCK A -1;
		Loop;
	Ready:
		TNT1 A 0 A_JumpIfInventory("SawedOffCheck", 1, 2);
		SAWF A 1 A_WeaponReady();
		Loop;
		SAWF B 1 A_WeaponReady();
		Loop;
	Deselect:
		TNT1 A 0 A_JumpIfInventory("SawedOffCheck", 1, "Down1Shell");
		SAWF A 1 A_Lower(20);
		Loop;
	Down1Shell:
		SAWF B 1 A_Lower(20);
		Loop;
	Select:
		TNT1 A 0 A_JumpIfInventory("SawedOffCheck", 1, "Up1Shell");
		SAWF A 1 A_Raise(20);
		Loop;
	Up1Shell:
		SAWF B 1 A_Raise(20);
		Loop;
	Fire:
		TNT1 A 0 A_JumpIfInventory("SawedOffCheck", 1, "Fire1Shell");
		SAWF B 2
		{
			A_StartSound("SawedOff/Fire", CHAN_WEAPON);
			A_Overlay(-PSP_FLASH, "GunSmoke");
			A_ViewKick();
			A_GunFlash();
			A_FireBullets(5.6, 3.5, 7, 5, "TCOTDBulletPuff", FBF_USEAMMO);
		}
		SAWF B 1 A_WeaponOffset(10, 52);
		SAWF B 1 A_WeaponOffset(14, 60);
		SAWF B 2 A_WeaponOffset(16, 64, WOF_INTERPOLATE);
		SAWF B 1 A_WeaponOffset(14, 60, WOF_INTERPOLATE);
		SAWF B 1 A_WeaponOffset(10, 52, WOF_INTERPOLATE);
		SAWF B 1 A_WeaponOffset(3, 38, WOF_INTERPOLATE);
		SAWF B 1 A_WeaponOffset(2, 36, WOF_INTERPOLATE);
		SAWF B 1 { A_WeaponOffset(1, 34, WOF_INTERPOLATE); A_GiveInventory("SawedOffCheck", 1); }
		SAWF B 2 A_WeaponOffset(0, 32);
		Goto Ready;
	Fire1Shell:
		SAWF C 2
		{
			A_StartSound("SawedOff/Fire", CHAN_WEAPON);
			A_Overlay(-PSP_FLASH, "GunSmoke");
			A_ViewKick();
			A_GunFlash();
			A_FireBullets(5.6, 3.5, 7, 5, "TCOTDBulletPuff", FBF_USEAMMO);
		}
		SAWF C 1 A_WeaponOffset(10, 52);
		SAWF C 1 A_WeaponOffset(14, 60);
		SAWF C 2 A_WeaponOffset(16, 64, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(14, 60, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(10, 52, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(3, 38, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(2, 36, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(1, 34, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(0, 32);
		Goto Load;
	AltFire:
		SAWF A 0
		{
			// JFC LOL - Nash
			State st = NULL;
			if (CountInv("SawedOffCheck"))
			{
				st = ResolveState("Fire1Shell");

				// need to give 1 shell back because AltFire will always subtract 2
				let a = invoker.Owner.FindInventory("TCOTDAmmoShell");
				if (a)
					a.amount += 1;
			}
			return st;
		}
		SAWF C 2
		{
			A_StartSound("SawedOff/AltFire", CHAN_WEAPON);
			A_Overlay(-PSP_FLASH, "BigGunSmoke");
			A_ViewKick();
			A_GunFlash();
			A_FireBullets(11.2, 7.1, 20, 5, "TCOTDBulletPuff", FBF_USEAMMO);
		}
		SAWF C 1 A_WeaponOffset(10, 52);
		SAWF C 1 A_WeaponOffset(28, 68);
		SAWF C 1 A_WeaponOffset(32, 76);
		SAWF C 2 A_WeaponOffset(38, 88, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(36, 84, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(32, 76, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(28, 68, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(14, 60, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(10, 52, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(3, 38, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(2, 36, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(1, 34, WOF_INTERPOLATE);
		SAWF C 1 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		Goto Load;
	Load:
		TNT1 A 0 A_TakeInventory("SawedOffCheck", 1);
		SAWF C 1 A_CheckReload();
		SAWF E 2;
		SAWF F 2
		{
			A_StartSound("SawedOff/Reload", CHAN_WEAPON, CHANF_OVERLAP);
			A_SpawnWeaponFX("TCOTDEmptyCasingShell", 2);
			A_SpawnWeaponFX("TCOTDEmptyCasingShell", 4);
		}
		SAWF G 8 A_Overlay(PSP_WEAPON + 1, "ElHando");
		SAWF JE 2;
		Goto Ready;
	ElHando:
		TNT1 A 0 A_OverlayFlags(PSP_WEAPON + 1, PSPF_ADDWEAPON, false);
		SAWF H 1 A_OverlayOffset(PSP_WEAPON + 1, 0, 32, WOF_INTERPOLATE);
		SAWF H 1 A_OverlayOffset(PSP_WEAPON + 1, -9, 26, WOF_INTERPOLATE);
		SAWF H 1 A_OverlayOffset(PSP_WEAPON + 1, -18, 20, WOF_INTERPOLATE);
		SAWF H 1 A_OverlayOffset(PSP_WEAPON + 1, -26, 15, WOF_INTERPOLATE);
		SAWF H 1 A_OverlayOffset(PSP_WEAPON + 1, -32, 10, WOF_INTERPOLATE);
		SAWF I 1 A_OverlayOffset(PSP_WEAPON + 1, 0, 32);
		SAWF I 1 A_OverlayOffset(PSP_WEAPON + 1, -4, 40, WOF_INTERPOLATE);
		SAWF I 1 A_OverlayOffset(PSP_WEAPON + 1, -8, 48, WOF_INTERPOLATE);
		Stop;
	Flash:
		SAWF D 2 A_Light2();
		SAWF D 2 A_Light1();
		Goto LightDone;
	GunSmoke:
		TNT1 A 0 A_OverlayFlags(-PSP_FLASH, PSPF_ADDWEAPON, false);
		TNT1 A 0 A_JumpIfInventory("SawedOffCheck", 1, 4);
		SFFL ABC 2 Bright A_OverlayOffset(-PSP_FLASH, 0, 32);
		Stop;
		SFFL ABC 2 Bright A_OverlayOffset(-PSP_FLASH, 16, 32);
		Stop;
	BigGunSmoke:
		TNT1 A 0 A_OverlayFlags(-PSP_FLASH, PSPF_ADDWEAPON, false);
		SFFL DEF 2 Bright A_OverlayOffset(-PSP_FLASH, 0, 32);
		Stop;
	ViewKick:
		TNT1 A 3 A_SetViewPitch(ViewPitch - 2.5);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.625);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.625);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.625);
		TNT1 A 1 A_SetViewPitch(ViewPitch + 0.625);
		Stop;
	}
}

class SawedOffCheck : Inventory
{
	Default
	{
		Inventory.MaxAmount 1;
		-INVENTORY.INVBAR;
	}
}
