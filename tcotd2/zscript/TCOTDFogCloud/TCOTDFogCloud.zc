// Copyright 2020 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
//
//
//===========================================================================

class TCOTDFogCloud : TCOTDDietActor
{
	double pulseRate;
	transient CVar cvWeatherEnabled;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	Default
	{
		//$Sprite TNT1A0
		RenderStyle "Translucent";
		Alpha 0.88;
		Scale 3.0;
		FloatBobPhase 0;
		+NOINTERACTION
		+FORCEXYBILLBOARD
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void PostBeginPlay(void)
	{
		Super.PostBeginPlay();

		// randomize alpha pulsate speed
		pulseRate = frandom(40.0, 120.0);

		// the original had a random Z offset when spawned
		Vec3Offset(0.0, 0.0, frandom(0.0, 32.0));
	}

	override void Tick(void)
	{
		// populate the CVar, if it still can't be found, just destory this actor
		// because it will never function properly
		if (!cvWeatherEnabled)
		{
			cvWeatherEnabled = CVar.GetCVar("tcotd2_weatherfx", players[consoleplayer]);
			if (!cvWeatherEnabled)
			{
				Console.Printf("Warning: TCOTDFogCloud - could not find CVar reference");
				Destroy();
				return;
			}
		}

		// make the actor invisible if feature is disabled
		if (cvWeatherEnabled.GetBool() == false)
		{
			bInvisible = true;
			return;
		}

		Super.Tick();
		if (!bNoTimeFreeze && isFrozen()) return;

		bInvisible = false;

		// pulsate alpha
		let ticRate = Thinker.TICRATE;
		double pulseAlpha = abs(asin(sin(180.0 / (ticRate * pulseRate) * GetAge())) / 90);
		pulseAlpha = clamp(pulseAlpha, default.Alpha, 1.0);

		// fade alpha from camera distance
		double cameraAlpha = 1.0;
		let pmo = players[consoleplayer].mo;
		if (pmo)
		{
			double maxDist = 150.0;
			double dist = Distance2D(pmo);
			cameraAlpha = 1.0 - (maxDist / dist);
		}

		Alpha = pulseAlpha * cameraAlpha;
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	Spawn:
		XSMK A -1;
		Stop;
	}
}
