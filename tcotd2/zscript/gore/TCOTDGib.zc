/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDGib
//
//===========================================================================

class TCOTDGib : Actor
{
	bool stopTicking;
	double bounceZ;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	Default
	{
		Radius 6;
		Height 12;
		Gravity 0.7;
		Scale 0.7;
		+FLOORCLIP
		+DONTSPLASH
		//+FORCEXYBILLBOARD
		-SOLID
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void BeginPlay(void)
	{
		Super.BeginPlay();
		bSpriteFlip = RandomPick[rnd_GibSpawn](false, true);
		bounceZ = frandom[rnd_GibSpawn](1.5, 9.9);
	}

	override void PostBeginPlay(void)
	{
		Super.PostBeginPlay();
		A_SpawnItemEx("Blood");
	}

	override void Tick(void)
	{
		Super.Tick();

		if (stopTicking)
			return;

		if (!bNoTimeFreeze && isFrozen())
			return;

		if (bounceZ > 0.25)
		{
			if (Pos.Z <= FloorZ)
			{
				Vel.Z = bounceZ;
				bounceZ *= 0.5;
			}
		}
		else
		{
			Vel.XY *= 0.9;

			if (Vel.Length() <= 0.1)
			{
				A_Stop();
				bMoveWithSector = true;
				bNoInteraction = true;
				stopTicking = true;
				return;
			}
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256, "GibA", "GibB", "GibC", "GibD", "GibE", "GibF", "GibG");
		"####" "#" -1;
		Stop;
	GibA:
		BGIB A 0;
		Goto Spawn + 1;
	GibB:
		BGIB B 0;
		Goto Spawn + 1;
	GibC:
		BGIB C 0;
		Goto Spawn + 1;
	GibD:
		BGIB D 0;
		Goto Spawn + 1;
	GibE:
		BGIB E 0;
		Goto Spawn + 1;
	GibF:
		BGIB F 0;
		Goto Spawn + 1;
	GibG:
		BGIB G 0;
		Goto Spawn + 1;
	}
}
