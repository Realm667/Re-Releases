// Copyright 2020 - 2023 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// TCOTDFootstep
// Plays a footstep sound when spawned
//
//===========================================================================

class TCOTDFootstep : Actor
{
	mixin TCOTDClientsideOnlyMixin;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	TCOTDPlayer pmo;
	double vol;
	Sound snd;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	Default
	{
		RenderStyle "None";
		+DONTSPLASH
		+CORPSE
		+NOTIMEFREEZE
		-SOLID
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void BeginPlay(void)
	{
		Super.BeginPlay();

		if (pmo)
		{
			A_SetSize(pmo.Radius, pmo.Height);
		}
	}

	override void Tick(void)
	{
		Super.Tick();

		if (pmo)
		{
			Vector3 fsp = (pmo.Pos.X, pmo.Pos.Y, Pos.Z);
			SetOrigin(fsp, false);
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	static double GetZOffset(TCOTDPlayer self)
	{
		// determine how high up to spawn the footstep actor
		return abs(self.Vel.Z);
	}

	void A_PlayFootstepSound(void)
	{
		int attn = (pmo.CheckLocalView()) ? ATTN_NONE : ATTN_NORM;
		A_StartSound(snd, volume: vol, attenuation: attn);

		// add water splash sound
		/*
		if (pmo.WaterLevel == 1)
		{
			String liqType = TCOTDPlayer(pmo).GetLiquidStr();
			A_StartSound(liqType .. "_splash_small", CHAN_AUTO, volume: vol, attenuation: attn);
		}
		*/
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	Spawn:
		TNT1 A 7;
		Stop;
	Crash:
		TNT1 A 10 A_PlayFootstepSound();
		Stop;
	}
}
