/*
Credits:
-Hand sprites from Fate (by Capstone);
-Pitchfork & Puff sprites from Blood
-Sounds from Thief
-Flying Pitchfork sprites by NeoWorm & Amuscaria acording to credits

Original code inherited from the original TCoTD 2, modified by Gothic.
*/

// ZScript rewrite by Nash Muhandes

class TCOTDWeaponMelee : TCOTDWeapon
{
	Default
	{
		Weapon.SelectionOrder 3700;
		Weapon.KickBack 100;
		+WEAPON.WIMPY_WEAPON
		+WEAPON.NOALERT
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void DoEffect(void)
	{
		Super.DoEffect();
		UpdateTag();
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void UpdateTag(void)
	{
		if (Owner)
		{
			if (Owner.CountInv("TCOTDPitchforkPickup") > 0)
			{
				SetTag("$TAG_MELEE_PITCHFORK");
			}
			else
			{
				SetTag("$TAG_MELEE_FIST");
			}
		}
	}

	action bool hasPitchfork(void)
	{
		if (!invoker.Owner) return false;
		return invoker.Owner.CountInv("TCOTDPitchforkPickup");
	}

	action State A_CheckPitchfork(StateLabel label)
	{
		State st = ResolveState(label);
		return hasPitchfork() ? st : NULL;
	}

	action void A_FistAttack(void)
	{
		A_CustomPunch(random(3, 5), meleesound: "Fist/Hit");
	}

	action void A_PitchforkAttack(void)
	{
		int angles = 4;
		double cone = 27.0;
		for (int i = 0; i < angles; i++)
		{
			int flags = FBF_EXPLICITANGLE | FBF_NORANDOMPUFFZ | FBF_NOFLASH;
			double ang = cone * (i / double(angles));
			int dmg = random(2, 3);
			Fire3DBullets(invoker.Angle - (cone / 2) + ang, 0, 0, dmg, "TCOTDPitchforkPuff", flags, 96.0);
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	Spawn:
		TNT1 A -1;
		Stop;
	Ready:
		TNT1 A 0 A_CheckPitchfork("PitchforkReady");
		FIST A 1 A_WeaponReady(WRF_NOSECONDARY);
		Loop;
	Select:
		TNT1 A 0 A_CheckPitchfork("PitchforkSelect");
		FIST A 1 A_Raise();
		Loop;
	Deselect:
		TNT1 A 0 A_CheckPitchfork("PitchforkDeselect");
		FIST A 1 A_Lower();
		Loop;
	Fire:
		TNT1 A 0 A_CheckPitchfork("PitchforkFire");
		TNT1 A 0 A_Jump(160, "PunchRightHand");
	PunchLeftHand:
		FIST B 2;
		FIST C 4 A_FistAttack();
		FIST CBAA 2;
		Goto Ready;
	PunchRightHand:
		FIST D 2;
		FIST E 4 A_FistAttack();
		FIST EDAA 2;
		Goto Ready;
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	PitchforkReady:
		FORK A 1 A_WeaponReady();
		Goto Ready;
	PitchforkSelect:
		FORK A 1 A_Raise();
		Loop;
	PitchforkDeselect:
		FORK A 1 A_Lower();
		Loop;
	PitchforkFire:
		FORK A 2;
		TNT1 A 0;
		FORK A 1 Offset(0, 30);
		FORK B 1;
		FORK B 1 Offset(0, 30);
		FORK C 5 A_PitchforkAttack();
		FORK C 1 Offset(0, 34);
		FORK B 1;
		FORK B 1 Offset(0, 34);
		FORK A 2 A_WeaponOffset(0, 32);
		FORK A 1 A_ReFire();
		Goto Ready;
	AltFire:
		FORK B 1 A_StartSound("Pitchfork/Throw", CHAN_WEAPON);
		FORK C 1;
		FORK D 1 A_FireProjectile("TCOTDPitchforkThrown", spawnheight: 5);
		FORK E 1 A_TakeInventory("TCOTDPitchforkPickup");
		FORK E 1 Offset(-18, 48);
		FORK E 1 Offset(-36, 64);
		FORK E 1 Offset(-54, 80);
		FORK E 1 Offset(-72, 92);
		TNT1 A 2;
		Goto Ready;
	}
}

class TCOTDPitchforkSpark : Actor
{
	Default
	{
		Radius 3;
		Height 4;
		Speed 25;
		RenderStyle "Add";
		Scale 0.7;
		SeeSound "Fork/Stab";
		+CANNOTPUSH
		+DONTSPLASH
		+NOBLOCKMAP
		+NOGRAVITY
		+RANDOMIZE
		+THRUGHOST
	}

	States
	{
	Spawn:
		TNT1 A 0;
		BSPR A 0 A_Jump(128, 7);
		BSPR ABCDEFG 2 Bright;
		Stop;
		BSPR HIJKLMN 2 Bright;
		Stop;
	XDeath:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Fork/Stab");
		BLD2 A 0 A_Jump(128,"XDeath2");
		BLD2 FGHI 4;
		Stop;
	XDeath2:
		BLD2 OPQR 4;
		Stop;
	}
}

class TCOTDPitchforkPuff : Actor
{
	Default
	{
		Scale 0.5;
		Activesound "";
		Attacksound "Pitchfork/Wall";	// what sound it makes when you hit a wall with it
		Seesound "Pitchfork/Flesh";		// what sound it makes when you beat somebody up with it
		+NOBLOCKMAP
		+NOGRAVITY
		+NOEXTREMEDEATH
		+PUFFONACTORS					// this is necessary for it to still make sound on enemies
	}

	States
	{
	Crash:
		PPUF A 0 A_SpawnItem("TCOTDPitchforkSpark");
		PPUF ABCDE 2;
		Stop;
	Spawn:
	Melee:
		TNT1 A 1;
		Stop;
	}
}

class TCOTDPitchforkThrown : Actor
{
	Default
	{
		Radius 2;
		Height 1;
		Speed 20;
		Damage 5;
		Gravity 0.125;
		Projectile;
		+RIPPER
		-NOBLOCKMAP
		-NOGRAVITY
	}

	States
	{
	Spawn:
		XIPP A -1;
		Stop;
	Death:
		XIPP A 0 A_AlertMonsters();
		XIPP A 4 A_SpawnItemEx("TCOTDPitchforkPickup");
		Stop;
	}
}

class TCOTDPitchforkPickup : Inventory replaces Chainsaw
{
	Default
	{
		Scale 1.2;
		Inventory.PickupMessage "$IP_FORK";
		Inventory.PickupSound "ITEMUP";
		Inventory.MaxAmount 1;
		-INVENTORY.INVBAR
	}

	States
	{
	Spawn:
		XFOR A -1;
		Stop;
	}
}
