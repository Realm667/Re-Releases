////////////
// WRAITH //
////////////
class DEWraith : TCOTDMonster
{
	private bool bFlinched;

	Default
	{
		//$Title Wraith
		Health 75;
		Radius 16;
		Height 32;
		Mass 50;
		Speed 3.33333333;
		FloatSpeed 1.33333333;
		MeleeRange 50;
		Scale 1.1;
		RenderStyle "Add";
		Alpha 0.67;
		PainChance 48;
		AttackSound "wraith/sight";
		PainSound "archvile/pain";
		DeathSound "wraith/death";
		Obituary "$OB_WRTH";
		Tag "$FN_WRTH";
		+DONTFALL
		+DONTGIB
		+DONTTHRUST
		+FLOAT
		+NOBLOOD
		+NOGRAVITY
		+NOTARGET
		+NOSPRITESHADOW
		+ONLYSLAMSOLID
		+GHOST
	}

	void A_WraithFlinched ()
	{
		bFlinched = true;
	}

	override int DamageMobj (Actor inflictor, Actor source, int damage, Name mod, int flags, double angle)
	{
		bool bChargingWhenDamaged = bSkullFly;
		bFlinched = false;

		if (bChargingWhenDamaged)
		{
			// [Blue Shadow] Monster is charging. Clear the SKULLFLY flag so that its velocity isn't zeroed and
			// it can be subject to pain.
			bSkullFly = false;
		}

		// [Blue Shadow] Inflict the damage.
		int dmg = Super.DamageMobj(inflictor, source, damage, mod, flags, angle);

		if (bChargingWhenDamaged)
		{
			if (!bFlinched && health > 0)
			{
				// [Blue Shadow] Monster didn't enter the Pain state sequence and it's still alive. Let it continue
				// charging and set the SKULLFLY flag back so it can slam-damage whatever it hits.
				bSkullFly = true;
			}
			else
			{
				// [Blue Shadow] Monster either entered the Pain state sequence or it died from the damage. Stop it
				// dead in its tracks.
				Vel = (0, 0, 0);
			}
		}

		return dmg;
	}

	States
	{
	Spawn:
		WRAI AB 10 A_Look();
		Loop;
	See:
		WRAI A 1 A_VileChase();
		WRAI AA 1 A_Chase2();
		WRAI A 1 A_VileChase();
		WRAI AA 1 A_Chase2();
		WRAI B 1 A_VileChase();
		WRAI BB 1 A_Chase2();
		WRAI B 1 A_VileChase();
		WRAI BB 1 A_Chase2();
		Loop;
	Missile:
		WRAI A 10 A_FaceTarget();
		WRAI B 4 A_SkullAttack();
		WRAI AB 4;
		Goto Missile + 2;
	Melee:
		WRAI A 5 A_FaceTarget();
		WRAI B 5 A_MonsterMeleeAttack(8, -1, "wraith/attack", damageType: 'Ghost');
		Goto See;
	Pain:
		WRAI A 3 A_WraithFlinched();
		WRAI A 3 A_Pain();
		Goto See;
	Heal:
		WRAI AB 3;
		WRAI A 0 Die(nullptr, nullptr);
	Death:
		WRAI E 4 A_NoBlocking();
		WRAI F 5 A_Scream();
		WRAI GHIJ 4;
		Stop;
	}
}
