/////////////////
// FAT ASSHOLE //
/////////////////
class Fatty : TCOTDMonster
{
	Default
	{
		//$Category New Monsters (TCOTD2)
		//$Title Butcher
		//$Color 12
		Health 200;
		GibHealth 35;
		Radius 20;
		Height 77;
		Mass 500;
		Speed 2;
		Scale 0.8;
		PainChance 48;
		PainChance "Stab", 48 / 4;
		SeeSound "fatty/sight";
		PainSound "fatty/pain";
		DeathSound "fatty/death";
		ActiveSound "fatty/active";
		Obituary "$OB_FATY";
		HitObituary "$HB_FATY";
		Tag "$FN_FATY";
		DropItem "TCOTDHealthPickupHeart", 128;
		+CASTSPRITESHADOW
	}

	protected void A_ButcherVomit(void)
	{
		Actor vomit;

		for (int i = 0; i < 5; i++)
		{
			vomit = A_SpawnProjectile("ButcherVomit", 62, 0, i != 0 ? frandom[rnd_Butcher](-6, 6) : 0, CMF_AIMDIRECTION);

			if (vomit && i != 0)
			{
				vomit.Vel.Z += frandom[rnd_Butcher](0, 4.5);
			}
		}
	}

	States
	{
	Spawn:
		BFAT A 10 A_Look();
		Loop;
	See:
		BFAT A 1 A_Chase();
		BFAT AA 1 A_Chase2();
		BFAT A 1 A_Chase();
		BFAT AA 1 A_Chase2();
		BFAT B 1 A_Chase();
		BFAT BB 1 A_Chase2();
		BFAT B 1 A_Chase();
		BFAT BB 1 A_Chase2();
		BFAT C 1 A_Chase();
		BFAT CC 1 A_Chase2();
		BFAT C 1 A_Chase();
		BFAT CC 1 A_Chase2();
		BFAT D 1 A_Chase();
		BFAT DD 1 A_Chase2();
		BFAT D 1 A_Chase();
		BFAT DD 1 A_Chase2();
		BFAT E 1 A_Chase();
		BFAT EE 1 A_Chase2();
		BFAT E 1 A_Chase();
		BFAT EE 1 A_Chase2();
		BFAT F 1 A_Chase();
		BFAT FF 1 A_Chase2();
		BFAT F 1 A_Chase();
		BFAT FF 1 A_Chase2();
		Loop;
	Melee:
		BFAT H 4 A_FaceTarget();
		BFAT I 4 A_SkelWhoosh();
		BFAT J 4 A_MonsterMeleeAttack(15, 78, "skeleton/melee");
		BFAT KL 4;
		Goto See;
	Vomit:
		BFAT M 4 A_FaceTarget();
		BFAT N 7 A_FaceTarget();
		BFAT O 5 A_FaceTarget();
		BFAT P 5 A_ButcherVomit();
		BFAT O 10 A_FaceTarget();
		Goto See;
	Pain:
		BFAT G 2;
		BFAT G 6 A_Pain();
		BFAT G 0 A_JumpIfCloser(144, "Vomit");
		Goto See;
	Death:
		BFTD A 6 A_Scream();
		BFTD BC 6;
		BFTD D 6 A_NoBlocking();
		BFTD EF 6;
		BFTD G -1;
		Stop;
	XDeath:
		BFTD H 5 A_Scream();
		BFTD I 5;
		BFTD J 5
		{
			A_SpawnGibs();
			A_NoBlocking();
		}
		BFTD K 5;
		BFTD LMNOPQ 5;
		BFTD QRQRRRQRQQRRQQ 10;
		BFTD R -1;
		Stop;
	Raise:
		BFTD GFEDCBA 5;
		Goto See;
	}
}

class ButcherGoo : Actor
{
	Default
	{
		Height 2;
		Radius 2;
		Gravity 0.125;
		Scale 0.2;
		Alpha 0.85;
		RenderStyle "Translucent";
		+CANNOTPUSH
	}

	States
	{
	Spawn:
		BARF ABCDEFABCDEFABCDEF 3;
	Death:
		BARF AAAA 4 A_FadeOut(0.25);
		Stop;
	}
}

class ButcherVomit : Actor
{
	Default
	{
		Height 8;
		Radius 8;
		DamageFunction TCOTDGameplayStatics.GetAttackDamage(4);
		Speed 18;
		Scale 0.4;
		RenderStyle "Translucent";
		Alpha 0.85;
		Decal "BaronScorch";
		Projectile;
		SeeSound "fatty/attack";
		DeathSound "fatty/vomitsplat";
		-NOGRAVITY
	}

	protected void A_SpawnGoo(void)
	{
		for (int i = 0; i < 2; i++)
		{
			A_SpawnItemEx("ButcherGoo",
				frandom[rnd_ButcherVomit](-2, 2),
				frandom[rnd_ButcherVomit](-2, 2),
				frandom[rnd_ButcherVomit](-3, 3),
				frandom[rnd_ButcherVomit](-2, 2),
				frandom[rnd_ButcherVomit](-2, 2),
				frandom[rnd_ButcherVomit](-2, 2));
		}
	}

	States
	{
	Spawn:
		BARF AB 3 A_SetAngle(Angle + frandom[rnd_ButcherVomit](-5, 5));
		BARF C 0 A_SpawnGoo();
		BARF CDEF 3 A_SetAngle(Angle + frandom[rnd_ButcherVomit](-5, 5));
		BARF E 0 A_SpawnGoo();
		BARF EF 3 A_SetAngle(Angle + frandom[rnd_ButcherVomit](-5, 5));
		BARF A 0 A_SpawnGoo();
		Loop;
	Death:
		FBXX A 0 A_SetScale(1.0);
		FBXX A 8;
		FBXX B 6;
		FBXX C 4;
		Stop;
	}
}
