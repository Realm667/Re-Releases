////////////////
// HELL HOUND //
////////////////
class HotDog : TCOTDMonster
{
	Default
	{
		//$Title Hell Hound
		Health 300;
		PainChance 64;
		PainChance "Stab", 64 / 3;
		Speed 13.5;
		Radius 30;
		Height 42;
		Mass 500;
		SeeSound "dog/sight";
		AttackSound "dog/attack";
		PainSound "dog/pain";
		DeathSound "dog/death";
		ActiveSound "dog/active";
		MaxTargetRange 196;
		DamageFactor "Fire", 0.5;
		Obituary "$OB_HOUN";
		HitObituary "$HB_HOUN";
		Tag "$FN_HOUN";
		DropItem "TCOTDHealthPickupHeart", 160;
		+CASTSPRITESHADOW
	}

	protected void A_DogBreath(void)
	{
		A_FaceTarget();
		A_SpawnProjectile("DogFire", 28);
	}

	States
	{
	Spawn:
		HDOG A 10 A_Look();
		Loop;
	See:
		HDOG A 1 A_Chase();
		HDOG AAA 1 A_Chase2();
		HDOG B 1 A_Chase();
		HDOG BBB 1 A_Chase2();
		HDOG C 1 A_Chase();
		HDOG CCC 1 A_Chase2();
		HDOG D 1 A_Chase();
		HDOG DDD 1 A_Chase2();
		HDOG E 1 A_Chase();
		HDOG EEE 1 A_Chase2();
		HDOG F 1 A_Chase();
		HDOG FFF 1 A_Chase2();
		Loop;
	Melee:
		HDOG GH 6 A_FaceTarget();
		HDOG I 6 A_MonsterMeleeAttack(25, 108, "dog/bite");
		Goto See;
	Missile:
		HDOG G 8 A_FaceTarget();
		HDOG HHHHHHHHHHHH 1 A_DogBreath();
		HDOG I 6;
		Goto See;
	Pain:
		HDOG J 5;
		HDOG J 5 A_Pain();
		Goto See;
	Death:
		HDOG K 8;
		HDOG L 8 A_Scream();
		HDOG M 4;
		HDOG N 4 A_NoBlocking();
		HDOG OP 4;
		HDOG Q -1;
		Stop;
	/* Raise:
		HDOG QPONMLK 5;
		Goto See; */
	}

	//===========================================================================
	//
	// Cutscene states
	//
	//===========================================================================

	States
	{
	Roar:
		HDOG A 105;
		HDOG FGH 6;
		HDOG H 72
		{
			A_Quake(3, 52, 0, 400);
			A_StartSound("EvilSounds8", CHAN_VOICE, volume: 1.0, attenuation: ATTN_NONE);
		}
		HDOG GF 6;
		HDOG F 0 A_StopSound(CHAN_VOICE);
		Goto Spawn;
	Turn:
		HDOG E 70;
		HDOG DCB 5;
		HDOG A 1
		{
			A_SetAngle(Angle + 12., SPF_INTERPOLATE);

			if (Angle >= 270.)
			{
				SetStateLabel("Spawn");
			}
		}
		Goto Turn + 4;
	Bark:
		HDOG A 175;
		HDOG GHI 5;
		HDOG GHI 2;
		Goto Spawn;
	}
}

class DogFire : Actor
{
	protected Array<Actor> victims;

	Default
	{
		Radius 6;
		Height 8;
		Speed 22.5;
		DamageFunction TCOTDGameplayStatics.GetAttackDamage(4);
		Alpha 0.67;
		Scale 0.67;
		DamageType "Fire";
		Projectile;
		RenderStyle "Add";
		SeeSound "dog/flame";
		DeathSound "dog/flame";
		+RIPPER
		+BLOODLESSIMPACT
		+NODAMAGETHRUST
		+BRIGHT
		+ROLLSPRITE
		+ROLLCENTER
	}

	override void BeginPlay(void)
	{
		Super.BeginPlay();
		A_SetRoll(random[rnd_DogFireRoll](0, 359));
	}

	override void Tick(void)
	{
		Super.Tick();

		if (!isFrozen())
		{
			A_ScaleVelocity(0.95);
			A_SetRoll(Roll + 22.5, SPF_INTERPOLATE);
		}
	}

	override int SpecialMissileHit(Actor victim)
	{
		if (victim && target && victim != target)
		{
			if (victims.Find(victim) == victims.Size())
			{
				victims.Push(victim);
			}
			else
			{
				return 1;
			}
		}

		return -1;
	}

	States
	{
	Spawn:
		TNT1 A 2;
		FRFX A 2 Light("FlameX_1");
		FRFX B 2 Light("FlameX_2");
		FRFX C 2 Light("FlameX_3");
		FRFX D 2 Light("FlameX_4");
		FRFX E 2 Light("FlameX_5");
		FRFX F 2 Light("FlameX_6");
		FRFX G 2 Light("FlameX_7");
	Death:
		FRFX H 2 Light("FlameX_8");
		FRFX I 2 Light("FlameX_9");
		FRFX J 2 Light("FlameX_10");
		FRFX K 2 Light("FlameX_11");
		FRFX L 2 Light("FlameX_12");
		FRFX M 2 Light("FlameX_13");
		FRFX N 2 Light("FlameX_14");
		FRFX O 2 Light("FlameX_15");
		Stop;
	}
}
