/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDZFScrollBarTrack
//
//===========================================================================

class TCOTDZFScrollBarTrack : TCOTDZFColoredFrame
{
	TCOTDJournalMenu parentMenu;
	int mouseX;
	int mouseY;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	TCOTDZFScrollBarTrack Init(Vector2 pos, Vector2 size, TCOTDJournalMenu mnu)
	{
		parentMenu = mnu;
		let f = TCOTDZFScrollBarTrack(Super.Init(pos, size));
		return f;
	}

	override void OnUIEvent(TCOTDZFUIEvent ev)
	{
		Super.OnUIEvent(ev);

		if (ev.Type == UIEvent.Type_MouseMove)
		{
			mouseX = ev.mouseX;
			mouseY = ev.mouseY;
		}

		let v = ScreenToRel((mouseX, mouseY));
		int yPos = int(v.Y);
		int yPosMax = int(box.size.Y);
		int yPosPercent = 100 * yPos / yPosMax;
		int maxLines = TCOTDZFScrollableFrame(master).GetMaxLines();
		int scrollAmount = maxLines * yPosPercent / 100;

		/*
		if (IsEnabled() && BoxToScreen().PointCollides((mouseX, mouseY)))
		{
			Console.Printf("%d, %d, %d%%, %d, %d", yPos, yPosMax, yPosPercent, maxLines, scrollAmount);
		}
		*/

		if (ev.Type == UIEvent.Type_LButtonDown)
		{
			if (IsEnabled() && BoxToScreen().PointCollides((mouseX, mouseY)))
			{
				TCOTDZFScrollableFrame(master).content.box.pos.Y = 0;

				for (int i = 0; i < scrollAmount; i++)
				{
					TCOTDZFScrollableFrame(master).ScrollDown(1);
				}
			}
		}
	}
}
