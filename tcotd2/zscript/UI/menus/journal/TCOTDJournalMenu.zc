/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDJournalMenu
//
//===========================================================================

class TCOTDJournalMenu : TCOTDZFGenericMenu
{
	const RES_WIDTH = 1280;
	const RES_HEIGHT = 720;

	TCOTDZFJournalHandler handler;
	PlayerPawn pmo;

	Font fnt;
	int fntColor;
	Color UIColor;
	int mouseScrollAmount;
	int keyScrollAmount;
	int scrollbarWidth;

	TCOTDZFImage mainBackground;

	TCOTDZFClickableFrame objectivesFrame;
	TCOTDZFClickableFrame notesFrame;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void Init(Menu parent)
	{
		Super.Init(parent);

		SetBaseResolution((RES_WIDTH, RES_HEIGHT));

		fnt = SmallFont;
		fntColor = Font.CR_BROWN;
		mouseScrollAmount = 5;
		keyScrollAmount = 3;
		scrollbarWidth = 4;

		pmo = players[consoleplayer].mo;

		handler = new('TCOTDZFJournalHandler');
		handler.menu = self;

		mainBackground = new('TCOTDZFImage').Init
		(
			(196, 80),
			(RES_WIDTH, RES_HEIGHT),
			"graphics/journal/journal_main.png",
			TCOTDZFImage.AlignType_TopLeft
		);
		mainBackground.Pack(mainFrame);

		objectivesFrame = TCOTDZFClickableFrame(new('TCOTDZFClickableFrame').Init
		(
			(241, 166),
			(362, 428),
			self,
			"ProcessObjective")
		);
		//objectivesFrame.Refresh();

		/*
		notesFrame = TCOTDZFClickableFrame(new('TCOTDZFClickableFrame').Init
		(
			(677, 166),
			(362, 428),
			self,
			"ProcessNote")
		);
		//notesFrame.Refresh();
		*/
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	int GetFontHeight(void)
	{
		if (!fnt)
			return 0;
		return fnt.GetHeight();
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	static bool IsOpen ()
	{
		let mnu = Menu.GetCurrentMenu();
		return mnu && mnu is 'TCOTDJournalMenu';
	}
}
