// -------------------------------------------------------------------------------------------------
//
// -------------------------------------------------------------------------------------------------

class TCOTDAltHud : AltHud
{
	// ----------------------------------------------------------------------------------------
	//
	// ----------------------------------------------------------------------------------------

	int DrawAir (PlayerInfo CPlayer, int x, int y)
	{
		if (CPlayer.health > 0 && CPlayer.mo.waterlevel > 2 && Level.airsupply > 0 && CPlayer.mo.AirCapacity > 0 &&
			(CPlayer.air_finished + 1 - Level.maptime) < int(Level.airsupply * CPlayer.mo.AirCapacity))
		{
			int curpnts = Max(CPlayer.air_finished - Level.maptime, 0);
			int maxpnts = int(Level.airsupply * CPlayer.mo.AirCapacity);
			int ratio = curpnts * 100 / maxpnts;
			DrawImageToBox(TexMan.CheckForTexture("graphics/hud/HUDAir.png", TexMan.Type_MiscPatch), x, y, 31, 17);
			DrawHudNumber(HudFont, Font.CR_LIGHTBLUE, ratio, x + 33, y + 17);
			y -= 25;
		}

		return y;
	}

	// ----------------------------------------------------------------------------------------
	//
	// ----------------------------------------------------------------------------------------

	int DrawPendant (PlayerInfo CPlayer, int x, int y)
	{
		let pendant = TCOTDPendant(CPlayer.mo.FindInventory('TCOTDPendant'));

		if (pendant)
		{
			DrawImageToBox(TexMan.CheckForTexture("PENDB0", TexMan.Type_MiscPatch), x, y, 31, 17);
			int next = pendant.next;
			int nextMax = pendant.nextMax > 0 ? pendant.nextMax : 1;
			double a = 1.0 - (1.0 * next / nextMax);
			if (pendant.nextMax <= 0) a = 0.0;
			DrawImageToBox(TexMan.CheckForTexture("graphics/hud/PendantGlow.png", TexMan.Type_MiscPatch), x - 3, y - 2, 31, 17, a * 0.75);
			y -= 25;
		}

		return y;
	}

	// ----------------------------------------------------------------------------------------
	//
	// ----------------------------------------------------------------------------------------

	int DrawOil (PlayerInfo CPlayer, int x, int y)
	{
		let oil = CPlayer.mo.FindInventory('TCOTDLanternOil');
		int ratio = oil ? oil.Amount * 100 / oil.MaxAmount : 0;

		// [Blue Shadow] Only draw "0%" if the player has no oil whatsoever.
		if (ratio < 1 && oil && oil.Amount > 0)
		{
			ratio = 1;
		}

		// [Blue Shadow] Handle positioning. Code was plucked from the ammo list drawing code.

		String text = String.Format("%d%%", ratio);
		int width = ConFont.StringWidth(text);
		int xtext = x - width;
		int ximage = x;

		// [Blue Shadow] Icon first and counter next, or the other way around, sir?
		// Yes, this relies on the hud_ammo_order CVAR, but the oil is drawn directly below the ammo list,
		// with an icon and counter, too.
		if (hud_ammo_order > 0)
		{
			xtext -= 24;
			ximage -= 20;
		}
		else
		{
			ximage -= width + 20;
		}

		bool hasLantern = CPlayer.mo.FindInventory('TCOTDLanternPickup');
		DrawHudText(ConFont, Font.CR_BROWN, text, xtext, y + ConFont.GetHeight(), hasLantern ? 0.75 : 0.375);
		DrawImageToBox(TexMan.CheckForTexture("LANTC0", TexMan.Type_MiscPatch), ximage, y, 16, 8, hasLantern ? 0.75 : 0.375);
		return y - 11;
	}

	// ----------------------------------------------------------------------------------------
	//
	// ----------------------------------------------------------------------------------------

	override void DrawInGame (PlayerInfo CPlayer)
	{
		// No HUD in the title level, during cutscenes or if the journal is open.
		if (gamestate == GS_TITLELEVEL || !CPlayer || TCOTDGameplayStatics.IsInCutscene(CPlayer.mo) || TCOTDJournalMenu.IsOpen())
			return;

		int y = DrawAir(CPlayer, 5, hudheight - 70);
		y = DrawPendant(CPlayer, 9, y);

		if (!deathmatch)
		{
			DrawStatus(CPlayer, 5, y + 20);
		}
		else
		{
			DrawStatus(CPlayer, 5, y - 5);
			DrawFrags(CPlayer, 5, y);
		}

		DrawHealth(CPlayer, 5, hudheight - 45);
		DrawArmor(BasicArmor(CPlayer.mo.FindInventory('BasicArmor')), HexenArmor(CPlayer.mo.FindInventory('HexenArmor')), 5, hudheight - 20);
		y = DrawKeys(CPlayer, hudwidth - 4, hudheight - 10);
		y = DrawOil(CPlayer, hudwidth - 5, y);
		y = DrawAmmo(CPlayer, hudwidth - 5, y);
		if (hud_showweapons) DrawWeapons(CPlayer, hudwidth - 5, y);
		DrawInventory(CPlayer, 144, hudheight - 28);
		if (idmypos) DrawCoordinates(CPlayer, true);

		int h = SmallFont.GetHeight();
		y = h;
		if (DrawTime(y)) y += h;
		if (DrawLatency(y)) y += h;
		DrawPowerups(CPlayer, y - h + POWERUPICONSIZE * 5 / 4);
	}
}
