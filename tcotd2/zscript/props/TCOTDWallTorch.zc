// Copyright 2020 - 2023 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
//
//
//===========================================================================

class TCOTDWallTorch : TCOTDSwitchableDecoration replaces BlueTorch
{
	Default
	{
		Radius 16;
		Height 68;
		-SOLID
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	Spawn:
	Active:
		TBLX A 3 Bright NoDelay Light("WALLTORCH")
		{
			if (!CheckRange(1000.0, true))
			{
				if (!IsActorPlayingSound(CHAN_VOICE, "sfx/fireloop1"))
					A_StartSound("sfx/fireloop1", CHAN_VOICE, CHANF_LOOP, volume: 0.1, startTime: frandom[rnd_WallTorchFireSpawn](0.f, S_GetLength("sfx/fireloop1")));

				A_SpawnItemEx("TCOTDWallTorchFlame",
					frandom[rnd_WallTorchFireSpawn](-2.0, 2.0), frandom[rnd_WallTorchFireSpawn](-2.0, 2.0), frandom[rnd_WallTorchFireSpawn](74.0, 76.0),
					0.001 * frandom[rnd_WallTorchFireSpawn](10.0, 200.0), 0.001 * frandom[rnd_WallTorchFireSpawn](10.0, 200.0), 0.001 * frandom[rnd_WallTorchFireSpawn](500.0, 1000.0));
			}
			else if (IsActorPlayingSound(CHAN_VOICE, "sfx/fireloop1"))
			{
				A_StopSound(CHAN_VOICE);
			}
		}
		Loop;
	Inactive:
		TBLX A 1
		{
			A_StopSound(CHAN_VOICE);
		}
		TBLX A -1;
		Stop;
	}
}

class TCOTDWallTorchFlame : TCOTDFire
{
	Default
	{
		Scale 0.175;
	}

	States
	{
	Spawn:
		FIR1 A 0 NoDelay;
		Goto SpawnLoop;
	}
}
