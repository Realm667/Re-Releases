// Copyright 2020 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
//
//
//===========================================================================

class TCOTDFoliage : TCOTDDietActor
{
	Default
	{
		FloatBobPhase 0;
		+NOINTERACTION
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void PostBeginPlay(void)
	{
		Super.PostBeginPlay();
		A_SetScale(Scale.X * frandom(0.9, 1.1));
		bSpriteFlip = RandomPick(false, true);
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	States
	{
	SpawnLoop:
		"####" "#" -1;
		Stop;
	}
}

class TCOTDGrassRandom : TCOTDFoliage
{
	String variationClassName;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	Default
	{
		//$Title Grass (Randomized)
		//$Color 3
		//$Sprite GRS1A0
		Radius 16;
		Height 16;
		Scale 0.5;
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void BeginPlay(void)
	{
		String variations[] =
		{
			"",
			"TCOTDGrass01",
			"TCOTDGrass02",
			"TCOTDGrass03"
		};

		variationClassName = variations[random(1, 3)];

		Super.BeginPlay();
	}

	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			class<Actor> cls = variationClassName;
			if (cls)
			{
				Spawn(cls, Pos, ALLOW_REPLACE);
			}
		}
		Stop;
	}
}

class TCOTDGrass01 : TCOTDGrassRandom
{
	States
	{
	Spawn:
		GRS1 A 0;
		Goto SpawnLoop;
	}
}

class TCOTDGrass02 : TCOTDGrassRandom
{
	States
	{
	Spawn:
		GRS2 A 0;
		Goto SpawnLoop;
	}
}

class TCOTDGrass03 : TCOTDGrassRandom
{
	States
	{
	Spawn:
		GRS3 A 0;
		Goto SpawnLoop;
	}
}

class TCOTDBigBush : TCOTDFoliage
{
	Default
	{
		//$Title Big Bush
		Height 32;
	}

	States
	{
	Spawn:
		BUSZ A 0;
		Goto SpawnLoop;
	}
}

class TCOTDMushroom01 : TCOTDFoliage
{
	Default
	{
		//$Title Mushroom 01
		//$Color 3
		Scale 0.5;
	}

	States
	{
	Spawn:
		MUSH A 0;
		Goto SpawnLoop;
	}
}

class TCOTDMushroom02 : TCOTDFoliage
{
	Default
	{
		//$Title Mushroom 02
		//$Color 3
	}

	States
	{
	Spawn:
		MUSH B 0;
		Goto SpawnLoop;
	}
}

class TCOTDMushroom03 : TCOTDFoliage
{
	Default
	{
		//$Title Mushroom 03
		//$Color 3
	}

	States
	{
	Spawn:
		MUSH C 0;
		Goto SpawnLoop;
	}
}
