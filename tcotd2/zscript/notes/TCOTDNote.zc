/*
* TCOTD2 Game Code
* Copyright (C) 2020 - 2023  Nash Muhandes
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

//===========================================================================
//
// TCOTDNote
// Notes, AKA "letters"
//
//===========================================================================

class TCOTDNote : Inventory abstract
{
	String noteText;
	String notePic;
	property NotePic: notePic;

	Default
	{
		Alpha 0.09;
		Inventory.Amount 1;
		Inventory.MaxAmount 1;
		+Inventory.UNDROPPABLE
		+Inventory.UNTOSSABLE
		-Inventory.INVBAR
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	override void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);

		if (Owner && Owner is "PlayerPawn")
		{
			String newTag = "";

			if (GetClass() == "TCOTDNote")
			{
				newTag = "$NOTE_DEFAULT";
				noteText = "$NOTE_TXT_DEFAULT";
			}
			else
			{
				newTag = "$NOTE_" .. String.Format("%s", String.Format("%s", GetClassName()).Mid("TCOTDNOTE".Length())).MakeUpper();
				noteText = "$NOTE_TXT_" .. String.Format("%s", String.Format("%s", GetClassName()).Mid("TCOTDNOTE".Length())).MakeUpper();
			}

			SetTag(newTag);

			//Console.Printf(GetTag());
			//Console.Printf(StringTable.Localize(noteText));
		}
	}

	static void ReadNoteFromACS(Actor activator, String noteClassName)
	{
		// every player gets a copy of the note
		for (int i = 0; i < MAXPLAYERS; i++)
		{
			if (playeringame[i])
			{
				let pmo = players[i].mo;
				pmo.GiveInventory(noteClassName, 1);
			}
		}

		// open the note only for the player who clicked on it
		if (activator == players[consoleplayer].mo)
		{
			EventHandler.SendNetworkEvent("EV_SetNoteToRead:" .. noteClassName);
		}
	}
}
