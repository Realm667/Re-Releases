#library "tcotd2.acs"
#include "zcommon.acs"

#define MAX_VOLUME 127
#define MAX_PLAYER_HEALTH 200

int playerID;
int playerNum;

global int 1: fear;
global int 2: fearTimer;
global int 3: fearAng1;
global int 4: fearAng2;
global int 5: fearAng3;

//fadescript for map setup
script "Maplaunch" ENTER
{
	FadeRange(0,0,0,1.0,0,0,0,0.0,1.5);
}

//lowhealth scripts - from BoA
script "30Health" ENTER
{
	int width = 640, height = 480;
	SetHudSize(width, height, 0);
	SetFont("M_INJ");

	// Half width and height (in fixed-point).
	int half_width  = (width / 2) << 16;
	int half_height = (height / 2) << 16;

	while (true)
	{
		int health = GetActorProperty(0, APROP_HEALTH);
		if (health > 0 && health <= 30)
		{
			HudMessage(s:"A"; HUDMSG_FADEINOUT, 0, CR_WHITE, half_width, half_height, 0.0, 0.5, 0.5);

			// Volume and delay of heartbeat (faster and louder with less health).
			int volume = MAX_VOLUME;
			int delay1 = 10;
			int delay2 = 14;

			if (health > 20)
			{
				volume = MAX_VOLUME - 50;
				delay1 = 21;
				delay2 = 34;
			}
			else if (health > 10)
			{
				volume = MAX_VOLUME - 25;
				delay1 = 18;
				delay2 = 24;
			}

			LocalAmbientSound("hbeat", volume);
			Delay(delay1);
			LocalAmbientSound("hbeat", volume);
			Delay(delay2);
		}

		Delay(1);
	}
}

//Code needed for Nightmares - ozy81, original code by MaxiClouds
script "FearScreen" ENTER
{
	int width = 320, height = 240;
	SetHudSize(width, height, 0);
	SetFont("M_FEAR");

	// Half width and height (in fixed-point).
	int half_width  = (width / 2) << 16;
	int half_height = (height / 2) << 16;

	while (true)
	{
		int madness =  CheckInventory("FearIntensity");
		if (madness > 1)
		{
			HudMessage(s:"A"; HUDMSG_FADEINOUT | HUDMSG_LAYER_UNDERHUD | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP | HUDMSG_ALPHA , 0, CR_UNTRANSLATED, half_width, half_height, 0.0, 0.5, madness, 0.2);
		}
		
		Delay(1);
	}
}

Script "FearCheck" (void)
{
	if (CheckActorInventory(playerID,"FearStop"))
	{
		ACS_NamedExecute("FearEffect",0);
	}
	Delay(1);
	restart;
}

Script "FearEffect" (void)
{
	fear = CheckInventory("FearIntensity");
	fear--;
	if (fear < 0) fear = 0;	
	int ftilt1 = 170;
	int ftilt2 = 170;
	int fpitch = 20;
	feartimer+=15;
	if (fear < 512)
	{
		int mul = (fear*65536)/512;
		ftilt1 = FixedMul(ftilt1,mul);
		ftilt2 = FixedMul(ftilt2,mul);
		fpitch = FixedMul(fpitch,mul);
	}
	int sin2 = Sin(2*feartimer*32)/2;
	int sin3 = Sin(3*feartimer*32)/2;
	int sin4 = Sin(4*feartimer*32)/2;
	int sin5 = Sin(5*feartimer*32)/2;
	int gScreenTilt = FixedMul(sin2+sin3,ftilt1);
	int fearTilt = FixedMul(sin3+sin4,ftilt2);
	int fearPitch = FixedMul(sin4+sin5,fpitch);
	int pitch = GetActorPitch(playerid);
	int roll = GetActorRoll(playerid);
	int angle = GetActorAngle(playerid);
	ChangeActorPitch(playerid,(fearPitch-fearAng1)*32+Pitch);
	ChangeActorRoll(playerid,(gScreenTilt-fearAng2)*32+Roll);
	ChangeActorAngle(playerid,(fearTilt-fearAng3)*32+Angle);
	fearAng1 = fearPitch;
	fearAng2 = gScreenTilt;
	fearAng3 = fearTilt;
	TakeInventory("FearIntensity", 1);
	Delay(1);
	if (CheckInventory("FearIntensity") < 1 )
		{
			ACS_NamedExecute("FearCheck", 0);
			terminate;
		}
	restart;
}

Script "Madness" ENTER //ozy81, original script by AFADoomer and Talon1024
{
	int width = 512, height = 384;
	SetHudSize(width, height, 0);
	SetFont("M_MADNES");

	// Half width and height (in fixed-point).
	int half_width  = (width / 2) << 16;
	int half_height = (height / 2) << 16;

	while (true)
	{
		int nightmare = GetActorPowerupTics(0, "PowerFear");
		if (nightmare)
		{
			HudMessage(s:"A"; HUDMSG_FADEINOUT | HUDMSG_LAYER_UNDERHUD | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP | HUDMSG_ALPHA , 0, CR_UNTRANSLATED, half_width, half_height, 0.0, 0.5, nightmare, 0.2);
		}
		
		Delay(1);
	}
}

//Code necessary for CyberBog
function int degsin(int x)
{
	int result;
	if (x>=0)
	{
		result=sin(FixedMul(x<<16,0.0111111111)/4);
	}
	else 
	{
		result=-sin(FixedMul(-x<<16,0.0111111111)/4);
	}
	return result;
}

function int degcos(int x)
{
	return cos(FixedMul(x<<16,0.0111111111)/4);
}

function int sqrt_x3(int number)
{
	if(number <= 3)
	{
		if(number > 0)
		{
			return 1;
		}
		return 0;
	}
	int oldAns = number >> 1,
	newAns = (oldAns + number / oldAns) >> 1;
	while(newAns < oldAns)
	{
		oldAns = newAns;
		newAns = (oldAns + number / oldAns) >> 1;
	}
	return oldAns;
}

function int abs(int x)
{
    if (x < 0) return -x;
    return x;
}

function int sqrt_x(int x)
{
	int r;
	x = x + 1 >> 1;
	while (x > r) x-=r++;
	return r;
}

function int dist (int tid1, int tid2)
{
	int x, y, z, d;
	x = GetActorX(tid1) - GetActorX(tid2) >> 16; 
	y = GetActorY(tid1) - GetActorY(tid2) >> 16;
	z = GetActorZ(tid1) - GetActorZ(tid2) >> 16;
	d = sqrt_x( x*x + y*y + z*z );
	return d;
}

Script "SetActivatorTarget" (int tid)
{
	int k=activatorTID();
	int subheight;
	int grenangle;
	int distancepro,d,i;
	SetActivatorToTarget(0);
	int distance=dist(0,k);
	subheight=(GetActorZ(0)>>16)-(GetActorZ(k)>>16);
	for (i=-89;i<=89;++i)
	{
		distancepro=sqrt_x3(distance*distance-abs((subheight>>16)*(subheight>>16)));
		d=((FixedMul(distancepro<<16,FixedDiv(degsin(i),degcos(i))))>>16)-(((FixedMul(1.4,distancepro<<16))>>16)*distancepro)/((FixedMul(4050.0,FixedMul(degcos(i),degcos(i))))>>16);
		if (d>subheight)
		{
			grenangle=i * 0.85;
			break;
		}
	}
	SetActivator(k);
	SetResultValue(i);
}